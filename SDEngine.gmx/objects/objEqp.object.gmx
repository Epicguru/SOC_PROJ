<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000001</depth>
  <persistent>0</persistent>
  <parentName>parDeactivator</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = 0 // 0 - Equipment mode, 1 - Inventory mode
emode = 0 // 0 - Weap, 1 - Body, 2 - Arms, 3 - Other
slot = 0
m = 1
num = 0
num_val = 0
ok = 0
alarm[0] = 1

x = view_xview[0]+v_offset
y = view_yview[0]

_x[1]=x+84
_x[2]=x+192
_x[3]=x+252
for (var i=0; i&lt;10; i++)
{
    _y[i+1]=y+42+i*13;
}

x1 = 0+v_offset
x2 = 23+v_offset
x3 = 46+v_offset
x4 = 69+v_offset
eqp = ""
current_inv1 = global.current_inv+1

cursor_x  = _x[1]
cursor_y  = _y[1]+6
cursor_x2 = x1
cursor_image_index = 0
cursor_timer = 0

event_user(0);
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ok = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard controls
if ok {
    if (keyboard_check_pressed(vk_left)) {
        audio_play_sound(sndselect,0,0)
        if !mode {
            if cursor_x = _x[1] { cursor_x = _x[3] } 
            else if cursor_x = _x[3] { cursor_x = _x[1] }
        } else {
            if cursor_x = _x[2]-3 { cursor_x = _x[1]-3 }
            else if cursor_x = _x[1]-3 { cursor_x = _x[2]-3 }
        }
    } else if (keyboard_check_pressed(vk_right)){
        audio_play_sound(sndselect,0,0)
        if !mode {
            if cursor_x = _x[1] { cursor_x = _x[3] } 
            else if cursor_x = _x[3] { cursor_x = _x[1] }
        } else {
            if cursor_x = _x[1]-3 { cursor_x = _x[2]-3 } 
            else if cursor_x = _x[2]-3 { cursor_x = _x[1]-3 }
        }
    } else if (keyboard_check_pressed(vk_down)){
        audio_play_sound(sndselect2,0,0)
        if mode = 1 {
            if cursor_y = _y[1]+8
            {
            cursor_y = _y[2]+8
            }
            else if cursor_y = _y[2]+8
            {
            cursor_y = _y[3]+8
            }
            else if cursor_y = _y[3]+8
            {
            cursor_y = _y[4]+8
            }
            else if cursor_y = _y[4]+8
            {
            cursor_y = _y[5]+8
            }
            else if cursor_y = _y[5]+8
            {
            cursor_y = _y[6]+8
            }
            else if cursor_y = _y[6]+8
            {
            cursor_y = _y[7]+8
            }
            else if cursor_y = _y[7]+8
            {
            cursor_y = _y[8]+8
            }
            else if cursor_y = _y[8]+8
            {
            cursor_y = _y[9]+8
            }
            else if cursor_y = _y[9]+8
            {
            cursor_y = _y[10]+8
            }
            else if cursor_y = _y[10]+8
            {
            cursor_y = _y[1]+8
            }
        } else {
            if cursor_y = _y[1]+6
            {
            cursor_y = _y[2]+7
            emode = 1
            }
            else if cursor_y = _y[2]+7
            {
            cursor_y = _y[3]+8
            emode = 2
            }
            else if cursor_y = _y[3]+8
            {
            cursor_y = _y[4]+9
            emode = 3
            }
            else if cursor_y = _y[4]+9
            {
            cursor_y = _y[1]+6
            emode = 0
            }
        }
    } else if (keyboard_check_pressed(vk_up)){
        audio_play_sound(sndselect2,0,0)
        if mode = 1 {
            if cursor_y = _y[1]+8
            {
            cursor_y = _y[10]+8
            }
            else if cursor_y = _y[2]+8
            {
            cursor_y = _y[1]+8
            }
            else if cursor_y = _y[3]+8
            {
            cursor_y = _y[2]+8
            }
            else if cursor_y = _y[4]+8
            {
            cursor_y = _y[3]+8
            }
            else if cursor_y = _y[5]+8
            {
            cursor_y = _y[4]+8
            }
            else if cursor_y = _y[6]+8
            {
            cursor_y = _y[5]+8
            }
            else if cursor_y = _y[7]+8
            {
            cursor_y = _y[6]+8
            }
            else if cursor_y = _y[8]+8
            {
            cursor_y = _y[7]+8
            }
            else if cursor_y = _y[9]+8
            {
            cursor_y = _y[8]+8
            }
            else if cursor_y = _y[10]+8
            {
            cursor_y = _y[9]+8
            }
        } else {
            if cursor_y = _y[1]+6
            {
            cursor_y = _y[4]+9
            emode = 3
            }
            else if cursor_y = _y[2]+7
            {
            cursor_y = _y[1]+6
            emode = 0
            }
            else if cursor_y = _y[3]+8
            {
            cursor_y = _y[2]+7
            emode = 1
            }
            else if cursor_y = _y[4]+9
            {
            cursor_y = _y[3]+8
            emode = 2
            }
        }
    } else if (keyboard_check_pressed(global.kb_q)){
        if mode = 0 {
            audio_play_sound(sndselect,0,0)    
            switch global.pl_count {
                case 0: 
                case 1:
                    cursor_x2 = x1
                    global.current_inv = 0
                    break;
                case 2:
                    if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                    else { cursor_x2 = x1; global.current_inv = 0 }
                    break;
                case 3:
                    if cursor_x2 = x1 { cursor_x2 = x3; global.current_inv = 2 }
                    else if cursor_x2 = x3 { cursor_x2 = x2; global.current_inv = 1 }
                    else { cursor_x2 = x1; global.current_inv = 0 }
                    break;
                case 4:
                    if cursor_x2 = x1 { cursor_x2 = x4; global.current_inv = 3 }
                    else if cursor_x2 = x2 { cursor_x2 = x1; global.current_inv = 0 }
                    else if cursor_x2 = x3 { cursor_x2 = x2; global.current_inv = 1 }
                    else if cursor_x2 = x4 { cursor_x2 = x3; global.current_inv = 2 }
                    break;
            }
            event_user(0)
        }
    } else if (keyboard_check_pressed(global.kb_w)){
        if mode = 0{
            audio_play_sound(sndselect,0,0)
            switch global.pl_count {
                case 0: 
                case 1:
                    cursor_x2 = x1
                    global.current_inv = 0
                    break;
                case 2:
                    if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                    else { cursor_x2 = x1; global.current_inv = 0 }
                    break;
                case 3:
                    if cursor_x2 = x2 { cursor_x2 = x3; global.current_inv = 2 }
                    else if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                    else { cursor_x2 = x1; global.current_inv = 0 }
                    break;
                case 4:
                    if cursor_x2 = x3 { cursor_x2 = x4; global.current_inv = 3 }
                    else if cursor_x2 = x4 { cursor_x2 = x1; global.current_inv = 0 }
                    else if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                    else if cursor_x2 = x2 { cursor_x2 = x3; global.current_inv = 2 }
                    break;
            }
            event_user(0)
        }
    } else if (keyboard_check_pressed(global.kb_choose)){
        if mode = 0 {
            audio_play_sound(sndchoose,0,0)
            if cursor_x != _x[3] {
                ok = 0
                alarm[0] = 1
                mode = 1
                cursor_x  = _x[1]-3
                cursor_y  = _y[1]+8
            } else {
                switch emode {
                    case 0: global.weap_equip[global.current_inv+1] = 0; eqp_boosts(global.current_inv+1); equipment_symbol_check(); break;
                    case 1: global.body_equip[global.current_inv+1] = 0; eqp_boosts(global.current_inv+1); equipment_symbol_check(); break;
                    case 2: global.arm_equip[global.current_inv+1] = 0; eqp_boosts(global.current_inv+1); equipment_symbol_check(); break;
                    case 3: global.other_equip[global.current_inv+1] = 0; eqp_boosts(global.current_inv+1); equipment_symbol_check(); break;
                }
            }
        } else {
            if !is_undefined(num) and global.pl_count != 0 {
                switch emode {
                    case 0:
                        if global.item[num,4] = 1 and (global.item[num,5] = -1 or global.item[num,5] = global.current_inv+1) {
                            global.weap_equip[global.current_inv+1] = global.item[num,0]
                            audio_play_sound(sndequip,0,0)
                            cursor_y = _y[1]+6;
                            event_user(1);
                        }
                        break;
                    case 1:
                        if global.item[num,4] = 2 and (global.item[num,5] = -1 or global.item[num,5] = global.current_inv+1) {
                            global.body_equip[global.current_inv+1] = global.item[num,0]
                            audio_play_sound(sndequip,0,0)
                            cursor_y = _y[2]+7;
                            event_user(1);
                        }
                        break;
                    case 2:
                        if global.item[num,4] = 3 and (global.item[num,5] = -1 or global.item[num,5] = global.current_inv+1) {
                            global.arm_equip[global.current_inv+1] = global.item[num,0]
                            audio_play_sound(sndequip,0,0)
                            cursor_y = _y[3]+8;
                            event_user(1);
                        }
                        break;
                    case 3:
                        if global.item[num,4] = 4 and (global.item[num,5] = -1 or global.item[num,5] = global.current_inv+1) {
                            global.other_equip[global.current_inv+1] = global.item[num,0]
                            audio_play_sound(sndequip,0,0)
                            cursor_y = _y[4]+9;
                            event_user(1);
                        }
                        break;
                }
            }
        }
    } else if (keyboard_check_pressed(global.kb_back)){
        audio_play_sound(sndback,0,0)
        if mode = 0 {
            objHealthBar.visible = 1
            objAilmentsBubble.visible = 1
            global.current_inv = 0
            with objInGameMenu {alarm[0] = 1}
            instance_destroy()
        } else {
            ok = 0
            alarm[0] = 1
            mode = 0
            //emode = 0
            switch emode {
                case 0: cursor_y = _y[1]+6; break;
                case 1: cursor_y = _y[2]+7; break;
                case 2: cursor_y = _y[3]+8; break;
                case 3: cursor_y = _y[4]+9; break;
            }
            cursor_x  = _x[1]
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

cursor_timer +=0.25

if cursor_timer = 1
{
cursor_image_index +=1
cursor_timer = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Does all the work
    if cursor_x = _x[1]-3 and cursor_y = _y[1]+8 { num = inv[1]; num_val = 0; }
    if cursor_x = _x[2]-3 and cursor_y = _y[1]+8 { num = inv[2]; num_val = 1; }
    if cursor_x = _x[1]-3 and cursor_y = _y[2]+8 { num = inv[3]; num_val = 2; }
    if cursor_x = _x[2]-3 and cursor_y = _y[2]+8 { num = inv[4]; num_val = 3; }
    if cursor_x = _x[1]-3 and cursor_y = _y[3]+8 { num = inv[5]; num_val = 4; }
    if cursor_x = _x[2]-3 and cursor_y = _y[3]+8 { num = inv[6]; num_val = 5; }
    if cursor_x = _x[1]-3 and cursor_y = _y[4]+8 { num = inv[7]; num_val = 6; }
    if cursor_x = _x[2]-3 and cursor_y = _y[4]+8 { num = inv[8]; num_val = 7; }
    if cursor_x = _x[1]-3 and cursor_y = _y[5]+8 { num = inv[9]; num_val = 8; }
    if cursor_x = _x[2]-3 and cursor_y = _y[5]+8 { num = inv[10]; num_val = 9; }
    if cursor_x = _x[1]-3 and cursor_y = _y[6]+8 { num = inv[11]; num_val = 10; }
    if cursor_x = _x[2]-3 and cursor_y = _y[6]+8 { num = inv[12]; num_val = 11; }
    if cursor_x = _x[1]-3 and cursor_y = _y[7]+8 { num = inv[13]; num_val = 12; }
    if cursor_x = _x[2]-3 and cursor_y = _y[7]+8 { num = inv[14]; num_val = 13; }
    if cursor_x = _x[1]-3 and cursor_y = _y[8]+8 { num = inv[15]; num_val = 14; }
    if cursor_x = _x[2]-3 and cursor_y = _y[8]+8 { num = inv[16]; num_val = 15; }
    if cursor_x = _x[1]-3 and cursor_y = _y[9]+8 { num = inv[17]; num_val = 16; }
    if cursor_x = _x[2]-3 and cursor_y = _y[9]+8 { num = inv[18]; num_val = 17; }
    if cursor_x = _x[1]-3 and cursor_y = _y[10]+8 { num = inv[19]; num_val = 18; }
    if cursor_x = _x[2]-3 and cursor_y = _y[10]+8 { num = inv[20]; num_val = 19; }
    current_inv1 = global.current_inv+1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>eqp_boosts(global.current_inv+1)

ok = 0
alarm[0] = 1
mode = 0
emode = 0
//cursor_y  = _y[1]+6
cursor_x  = _x[1]
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>equipment_symbol_check()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_set_font(global.thenfont)
draw_set_color(c_white)
draw_window(x+72,y+32,20,9)
draw_window(x+240,y+32,9,9) //Unequip window
draw_set_halign(fa_right)
draw_text(_x[1]+40,_y[1]-2,"Weapon:#Body:#Arms:#Other:")
draw_set_halign(fa_left)
if global.weap_equip[global.current_inv+1] != 0 {
    draw_text(_x[1]+42,_y[1]-2,"\#"+global.item[global.weap_equip[global.current_inv+1],1])
} else {
    draw_text(_x[1]+42,_y[1]-2,"(None)")
}
if global.body_equip[global.current_inv+1] != 0 {
    draw_text(_x[1]+42,_y[1]+12,"\#"+global.item[global.body_equip[global.current_inv+1],1])
} else {
    draw_text(_x[1]+42,_y[1]+12,"(None)")
}
if global.arm_equip[global.current_inv+1] != 0 {
    draw_text(_x[1]+42,_y[1]+26,"\#"+global.item[global.arm_equip[global.current_inv+1],1])
} else {
    draw_text(_x[1]+42,_y[1]+26,"(None)")
}
if global.other_equip[global.current_inv+1] != 0 {
    draw_text(_x[1]+42,_y[1]+40,"\#"+global.item[global.other_equip[global.current_inv+1],1])
} else {
    draw_text(_x[1]+42,_y[1]+40,"(None)")
}

draw_text(_x[3]+4,_y[1]-2,"Unequip")
draw_text(_x[3]+4,_y[1]+12,"Unequip")
draw_text(_x[3]+4,_y[1]+26,"Unequip")
draw_text(_x[3]+4,_y[1]+40,"Unequip")

draw_window(x+200,view_yview+192,14,5)

if mode = 1 {
    draw_window(x+72,view_yview+32,30,19)
    draw_window(x+72,view_yview+192,16,5)
    
    draw_text(_x[1],_y[1],eqp[1]+global.item[inv[1],1])
    draw_text(_x[2],_y[1],eqp[2]+global.item[inv[2],1])
    draw_text(_x[1],_y[2],eqp[3]+global.item[inv[3],1])
    draw_text(_x[2],_y[2],eqp[4]+global.item[inv[4],1])
    draw_text(_x[1],_y[3],eqp[5]+global.item[inv[5],1])
    draw_text(_x[2],_y[3],eqp[6]+global.item[inv[6],1])
    draw_text(_x[1],_y[4],eqp[7]+global.item[inv[7],1])
    draw_text(_x[2],_y[4],eqp[8]+global.item[inv[8],1])
    draw_text(_x[1],_y[5],eqp[9]+global.item[inv[9],1])
    draw_text(_x[2],_y[5],eqp[10]+global.item[inv[10],1])
    draw_text(_x[1],_y[6],eqp[11]+global.item[inv[11],1])
    draw_text(_x[2],_y[6],eqp[12]+global.item[inv[12],1])
    draw_text(_x[1],_y[7],eqp[13]+global.item[inv[13],1])
    draw_text(_x[2],_y[7],eqp[14]+global.item[inv[14],1])
    draw_text(_x[1],_y[8],eqp[15]+global.item[inv[15],1])
    draw_text(_x[2],_y[8],eqp[16]+global.item[inv[16],1])
    draw_text(_x[1],_y[9],eqp[17]+global.item[inv[17],1])
    draw_text(_x[2],_y[9],eqp[18]+global.item[inv[18],1])
    draw_text(_x[1],_y[10],eqp[19]+global.item[inv[19],1])
    draw_text(_x[2],_y[10],eqp[20]+global.item[inv[20],1])
    
    draw_text(x+212,y+199,"Offense"+"#"+"Defense")
    draw_set_halign(fa_right)
    draw_text(x+268,y+199,string(global.s_off[global.current_inv+1])+"#"+string(global.s_def[global.current_inv+1]))
    draw_set_halign(fa_left)
    if global.item[num,5] = global.current_inv+1 or global.item[num,5] = -1 {
        if global.weap_equip[global.current_inv+1] = num or global.body_equip[global.current_inv+1] = num or global.arm_equip[global.current_inv+1] = num or global.other_equip[global.current_inv+1] = num {
            draw_text(x+269,y+199,"`"+string(global.s_baseoff[global.current_inv+1]+
                                             global.item[global.weap_equip[global.current_inv+1],6]+
                                             global.item[global.body_equip[global.current_inv+1],6]+
                                             global.item[global.arm_equip[global.current_inv+1],6]+
                                             global.item[global.other_equip[global.current_inv+1],6])+
                                 "#`"+string(global.s_basedef[global.current_inv+1]+
                                             global.item[global.weap_equip[global.current_inv+1],7]+
                                             global.item[global.body_equip[global.current_inv+1],7]+
                                             global.item[global.arm_equip[global.current_inv+1],7]+
                                             global.item[global.other_equip[global.current_inv+1],7]))
        } else {
            draw_text(x+269,y+199,"`"+string(global.s_baseoff[global.current_inv+1]+global.item[num,6]+
                                             iff(global.item[num,4] = 1,0,global.item[global.weap_equip[global.current_inv+1],6])+
                                             iff(global.item[num,4] = 2,0,global.item[global.body_equip[global.current_inv+1],6])+
                                             iff(global.item[num,4] = 3,0,global.item[global.arm_equip[global.current_inv+1],6])+
                                             iff(global.item[num,4] = 4,0,global.item[global.other_equip[global.current_inv+1],6]))+
                                 "#`"+string(global.s_basedef[global.current_inv+1]+global.item[num,7]+
                                             iff(global.item[num,4] = 1,0,global.item[global.weap_equip[global.current_inv+1],7])+
                                             iff(global.item[num,4] = 2,0,global.item[global.body_equip[global.current_inv+1],7])+
                                             iff(global.item[num,4] = 3,0,global.item[global.arm_equip[global.current_inv+1],7])+
                                             iff(global.item[num,4] = 4,0,global.item[global.other_equip[global.current_inv+1],7])))
        }
    }
    switch global.item[num,5] {
        case -1:
        case current_inv1:
            switch global.item[num,4] {
                case 0:
                    draw_text(_x[1],y+199,"You can't equip this item.")
                    break;
                case 1:
                    if global.item[num,5] = -1 {
                        draw_text(_x[1],y+199,"A weapon.#"+"Everyone can use this.")
                    } else {
                        draw_text(_x[1],y+199,"A weapon.#"+global.s_name[global.item[num,5]]+" can use this.")
                    }
                    break;
                case 2:
                    if global.item[num,5] = -1 {
                        draw_text(_x[1],y+199,"Body equipment.#"+"Everyone can use this.")
                    } else {
                        draw_text(_x[1],y+199,"Body equipment.#"+global.s_name[global.item[num,5]]+" can use this.")
                    }
                    break;
                case 3:
                    if global.item[num,5] = -1 {
                        draw_text(_x[1],y+199,"Arms equipment.#"+"Everyone can use this.")
                    } else {
                        draw_text(_x[1],y+199,"Arms equipment.#"+global.s_name[global.item[num,5]]+" can use this.")
                    }
                    break;
                case 4:
                    if global.item[num,5] = -1 {
                        draw_text(_x[1],y+199,"Other equipment.#"+"Everyone can use this.")
                    } else {
                        draw_text(_x[1],y+199,"Other equipment.#"+global.s_name[global.item[num,5]]+" can use this.")
                    }
                    break;
            }
            break;
        default:
            if !is_undefined(num) {
                draw_text(_x[1],y+199,"You can't equip this item.")
            } else {
                draw_text(_x[1],y+199,"Nothing to equip here.")
            }
            break;
    }
} else {
    draw_text(x+212,y+199,"Offense"+"#"+"Defense")
    draw_text(x+269,y+199,"   "+string(global.s_off[global.current_inv+1])+"#   "+string(global.s_def[global.current_inv+1]))
}

draw_sprite(spr_cursor,cursor_image_index,cursor_x,cursor_y)

switch global.pl_count {
    case 0: 
        draw_sprite(sprPortraits,3,x+72,y+8);
        break;
    case 1:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        break;
    case 2:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        draw_sprite(sprPortraits,1,x+72+23,y+8);
        break;
    case 3:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        draw_sprite(sprPortraits,1,x+72+23,y+8);
        draw_sprite(sprPortraits,2,x+72+46,y+8);
        break;
    case 4:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        draw_sprite(sprPortraits,1,x+72+23,y+8);
        draw_sprite(sprPortraits,2,x+72+46,y+8);
        draw_sprite(sprPortraits,2,x+72+69,y+8);
        break;
}

draw_sprite(sprInvSel,0,view_xview+72+cursor_x2,y+8)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
