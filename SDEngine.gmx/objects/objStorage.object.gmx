<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000001</depth>
  <persistent>0</persistent>
  <parentName>parDeactivator</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>page = 0
num = 0
num_val = 0
ok = 0
object = noone

x = view_xview[0]+v_offset
y = view_yview[0]

_x[1]=x+84
_x[2]=x+192
for (var i=0; i&lt;10; i++)
{
    _y[i+1]=y+42+i*13;
}

cursor_x  = _x[1]
cursor_y  = _y[1]
cursor_image_index = 0
cursor_timer = 0

alarm[0] = 1
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ok = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard controls
if ok {
    if (keyboard_check_pressed(vk_left)) {
        audio_play_sound(sndselect,0,0)
        if cursor_x = _x[2]
        {
        cursor_x = _x[1]
        }
        else if cursor_x = _x[1]
        {
        cursor_x = _x[2]
        }
    } else if (keyboard_check_pressed(vk_right)){
        audio_play_sound(sndselect,0,0)
        if cursor_x = _x[1]
        {
        cursor_x = _x[2]
        }
        else if cursor_x = _x[2]
        {
        cursor_x = _x[1]
        }
    } else if (keyboard_check_pressed(vk_down)){
        audio_play_sound(sndselect2,0,0)
        if cursor_y = _y[1]
        {
        cursor_y = _y[2]
        }
        else if cursor_y = _y[2]
        {
        cursor_y = _y[3]
        }
        else if cursor_y = _y[3]
        {
        cursor_y = _y[4]
        }
        else if cursor_y = _y[4]
        {
        cursor_y = _y[5]
        }
        else if cursor_y = _y[5]
        {
        cursor_y = _y[6]
        }
        else if cursor_y = _y[6]
        {
        cursor_y = _y[7]
        }
        else if cursor_y = _y[7]
        {
        cursor_y = _y[8]
        }
        else if cursor_y = _y[8]
        {
        cursor_y = _y[9]
        }
        else if cursor_y = _y[9]
        {
        cursor_y = _y[10]
        }
        else if cursor_y = _y[10]
        {
        cursor_y = _y[1]
        page++
        event_user(0)
        }
    } else if (keyboard_check_pressed(vk_up)){
        audio_play_sound(sndselect2,0,0)

        if cursor_y = _y[1]
        {
            if page &gt; 0 {
                cursor_y = _y[10]
                page--
                event_user(0)
            }
        }
        else if cursor_y = _y[2]
        {
        cursor_y = _y[1]
        }
        else if cursor_y = _y[3]
        {
        cursor_y = _y[2]
        }
        else if cursor_y = _y[4]
        {
        cursor_y = _y[3]
        }
        else if cursor_y = _y[5]
        {
        cursor_y = _y[4]
        }
        else if cursor_y = _y[6]
        {
        cursor_y = _y[5]
        }
        else if cursor_y = _y[7]
        {
        cursor_y = _y[6]
        }
        else if cursor_y = _y[8]
        {
        cursor_y = _y[7]
        }
        else if cursor_y = _y[9]
        {
        cursor_y = _y[8]
        }
        else if cursor_y = _y[10]
        {
        cursor_y = _y[9]
        }
    } else if (keyboard_check_pressed(global.kb_choose)){
        if !is_undefined(num) and global.pl_count != 0 {
            audio_play_sound(sndchoose,0,0)
            keyboard_clear(global.kb_choose)
            switch add_item_ext(num) {
                case -1:
                    object.item = -1;
                    break;
                default:
                    object.item = num;
                    del_item_storage(page*20+num_val)
                    break;
            }
            instance_destroy()
        }
    } else if (keyboard_check_pressed(global.kb_back)){
        object.item = 0;
        audio_play_sound(sndback,0,0)
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview
y = view_yview

cursor_timer +=0.25

if cursor_timer = 1
{
cursor_image_index +=1
cursor_timer = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Does all the work

if cursor_x = _x[1] and cursor_y = _y[1] { num = storage[1]; num_val = 0; }
if cursor_x = _x[2] and cursor_y = _y[1] { num = storage[2]; num_val = 1; }
if cursor_x = _x[1] and cursor_y = _y[2] { num = storage[3]; num_val = 2; }
if cursor_x = _x[2] and cursor_y = _y[2] { num = storage[4]; num_val = 3; }
if cursor_x = _x[1] and cursor_y = _y[3] { num = storage[5]; num_val = 4; }
if cursor_x = _x[2] and cursor_y = _y[3] { num = storage[6]; num_val = 5; }
if cursor_x = _x[1] and cursor_y = _y[4] { num = storage[7]; num_val = 6; }
if cursor_x = _x[2] and cursor_y = _y[4] { num = storage[8]; num_val = 7; }
if cursor_x = _x[1] and cursor_y = _y[5] { num = storage[9]; num_val = 8; }
if cursor_x = _x[2] and cursor_y = _y[5] { num = storage[10]; num_val = 9; }
if cursor_x = _x[1] and cursor_y = _y[6] { num = storage[11]; num_val = 10; }
if cursor_x = _x[2] and cursor_y = _y[6] { num = storage[12]; num_val = 11; }
if cursor_x = _x[1] and cursor_y = _y[7] { num = storage[13]; num_val = 12; }
if cursor_x = _x[2] and cursor_y = _y[7] { num = storage[14]; num_val = 13; }
if cursor_x = _x[1] and cursor_y = _y[8] { num = storage[15]; num_val = 14; }
if cursor_x = _x[2] and cursor_y = _y[8] { num = storage[16]; num_val = 15; }
if cursor_x = _x[1] and cursor_y = _y[9] { num = storage[17]; num_val = 16; }
if cursor_x = _x[2] and cursor_y = _y[9] { num = storage[18]; num_val = 17; }
if cursor_x = _x[1] and cursor_y = _y[10] { num = storage[19]; num_val = 18; }
if cursor_x = _x[2] and cursor_y = _y[10] { num = storage[20]; num_val = 19; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i=0; i&lt;20; i++) {
    storage[i+1] =  ds_list_find_value(global.storage,i+20*page)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_set_font(global.thenfont)
draw_set_halign(fa_left)
draw_set_color(c_white)
draw_window(view_xview+72+v_offset,view_yview+32,30,19)
draw_window(view_xview+72+v_offset,view_yview+8,7,3)
draw_window(view_xview+72+v_offset,view_yview+192,30,5)
draw_window(view_xview+8+v_offset,view_yview+8,8,4)
draw_text(view_xview+20+v_offset,view_yview+18,"Checkout")

draw_text(_x[1],view_yview+14,"Page "+string(page+1))
draw_text(_x[1],_y[1],global.item[storage[1],1])
draw_text(_x[2],_y[1],global.item[storage[2],1])
draw_text(_x[1],_y[2],global.item[storage[3],1])
draw_text(_x[2],_y[2],global.item[storage[4],1])
draw_text(_x[1],_y[3],global.item[storage[5],1])
draw_text(_x[2],_y[3],global.item[storage[6],1])
draw_text(_x[1],_y[4],global.item[storage[7],1])
draw_text(_x[2],_y[4],global.item[storage[8],1])
draw_text(_x[1],_y[5],global.item[storage[9],1])
draw_text(_x[2],_y[5],global.item[storage[10],1])
draw_text(_x[1],_y[6],global.item[storage[11],1])
draw_text(_x[2],_y[6],global.item[storage[12],1])
draw_text(_x[1],_y[7],global.item[storage[13],1])
draw_text(_x[2],_y[7],global.item[storage[14],1])
draw_text(_x[1],_y[8],global.item[storage[15],1])
draw_text(_x[2],_y[8],global.item[storage[16],1])
draw_text(_x[1],_y[9],global.item[storage[17],1])
draw_text(_x[2],_y[9],global.item[storage[18],1])
draw_text(_x[1],_y[10],global.item[storage[19],1])
draw_text(_x[2],_y[10],global.item[storage[20],1])

draw_text(_x[1],y+199,global.item[num,2])

draw_sprite(spr_cursor,cursor_image_index,cursor_x-3,cursor_y+8)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
