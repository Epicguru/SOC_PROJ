<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parDeactivator</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name_question[1] = "The name of the protagonist."
name_question[2] = "The name of the second party member."
name_question[3] = "The name of the third party member."
name_question[4] = "The name of the fourth party member."
food_question = "What's your favorite food?"
thing_question = "What's your favorite thing?"

if !global.gender {
    dontcare[1,0] = "Ian"
    dontcare[1,1] = "Kevin"
    dontcare[1,2] = "Luke"
    dontcare[1,3] = "Rick"
    dontcare[1,4] = "Thom"
    dontcare[1,5] = "Reimer"
    dontcare[1,6] = "Nick"
    dontcare[1,7] = "Kuroo"
} else {
    dontcare[1,0] = "Jane"
    dontcare[1,1] = "Tina"
    dontcare[1,2] = "Maria"
    dontcare[1,3] = "Eva"
    dontcare[1,4] = "Karin"
    dontcare[1,5] = "Asis"
    dontcare[1,6] = "Erika"
    dontcare[1,7] = "Shion"
}

dontcare[2,0] = "Luna"
dontcare[2,1] = "Light"
dontcare[2,2] = "Gaia"
dontcare[2,3] = "Holly"
dontcare[2,4] = "Athena"
dontcare[2,5] = "Selena"
dontcare[2,6] = "Neomia"
dontcare[2,7] = "Akari"

dontcare[3,0] = "Sybil"
dontcare[3,1] = "Aida"
dontcare[3,2] = "Paula"
dontcare[3,3] = "Mei"
dontcare[3,4] = "Nodame"
dontcare[3,5] = "Debbie"
dontcare[3,6] = "Mana"
dontcare[3,7] = "Eru"

dontcare[4,0] = "Quattro"
dontcare[4,1] = "Rick"
dontcare[4,2] = "William"
dontcare[4,3] = "Zen"
dontcare[4,4] = "Luke"
dontcare[4,5] = "Charles"
dontcare[4,6] = "Poo"
dontcare[4,7] = "Boney"

dontcare[5,0] = "Spaghetti"
dontcare[5,1] = "Burgers"
dontcare[5,2] = "Bread"
dontcare[5,3] = "Cake"
dontcare[5,4] = "Blood"
dontcare[5,5] = "Metal"
dontcare[5,6] = "Steak"
dontcare[5,7] = "Omelets"

dontcare[6,0] = "Cleaning"
dontcare[6,1] = "Gifts"
dontcare[6,2] = "Everything"
dontcare[6,3] = "Books"
dontcare[6,4] = "Money"
dontcare[6,5] = "Power"
dontcare[6,6] = "Rockin"
dontcare[6,7] = "Love"

x=44+v_offset
y=104
if !audio_is_playing(bgmYourNamePlease) {
    audio_stop_all()
    if !global.mute audio_play_sound(bgmYourNamePlease,1,1)
}

_x[1]  = x+8
_x[2]  = x+(3*8)
_x[3]  = x+(5*8)
_x[4]  = x+(7*8)
_x[5]  = x+(9*8)
_x[6]  = x+(11*8)
_x[7]  = x+(13*8)
_x[8]  = x+(15*8)
_x[9]  = x+(17*8)
_x[10] = x+(19*8)
_x[11] = x+(21*8)
_x[12] = x+(23*8)
_x[13] = x+(25*8)
_x[14] = x+(27*8)

_y[1]  = y+8
_y[2]  = y+(3*8)
_y[3]  = y+(5*8)
_y[4]  = y+(7*8)
_y[5]  = y+(9*8)
_y[6]  = y+(13*8)

capital = true

cursor_x = _x[1]
cursor_y = _y[1]
cursor_image_index = 0
cursor_timer = 0
inactive = false

char = ""
player = 1
the_string = ""
done = 0
dontcareindex = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>init_items()                        // Init all the items used in the game.
init_skill_definitions()                      // Init the skills themselves.

global.theroom = global.firstroom
instance_create(0,0,objFadeOut)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursor_timer +=0.25

if cursor_timer = 1
{
cursor_image_index +=1
cursor_timer = 0
}

if cursor_y = _y[1] or cursor_y = _y[2] or cursor_y = _y[3]
{
    if cursor_x = _x[10] { cursor_x = _x[12] }
    else if cursor_x = _x[11] { cursor_x = _x[9] } 
}
else if cursor_y = _y[5]
{
    if cursor_x = _x[1] or cursor_x = _x[2] or cursor_x = _x[3] or cursor_x = _x[4] { cursor_x = _x[1] }
    else if cursor_x = _x[6] or cursor_x = _x[7] or cursor_x = _x[8] or cursor_x = _x[9] { cursor_x = _x[5] }
    else if cursor_x = _x[10] or cursor_x = _x[11] { cursor_x = _x[10]; cursor_y = _y[6] }
}
else if cursor_y = _y[6]
{
    if cursor_x = _x[2] or cursor_x = _x[3] { cursor_x = _x[10] }
    else if cursor_x = _x[4] or cursor_x = _x[5] or cursor_x = _x[6] or cursor_x =_x[7] or cursor_x = _x[8] or cursor_x = _x[9] { cursor_x = _x[1] }
    else if cursor_x = _x[11] { cursor_x = _x[14] }
    else if cursor_x = _x[12] or cursor_x = _x[13] { cursor_x = _x[10] }
}

if string_length(the_string) = 0 {
    dontcareindex = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.thenfont)
draw_set_color(c_white)
draw_set_alpha(1)
draw_set_halign(fa_left)
if !done {
    draw_window(_x[1]-16,_y[1]-40,11,4)
    draw_window(_x[1]+72,_y[1]-40,20,4)
    draw_window(_x[1]-16,_y[1]-8,31,16)
    switch player {
        case 1: 
            draw_text(_x[1]+88,y-22,name_question[1])
            break
        case 2: 
            draw_text(_x[1]+88,y-22,name_question[2]) 
            break
        case 3: 
            draw_text(_x[1]+88,y-22,name_question[3]) 
            break
        case 4: 
            draw_text(_x[1]+88,y-22,name_question[4]) 
            break
        case 5: 
            draw_text(_x[1]+88,y-22,food_question) 
            break
        case 6: 
            draw_text(_x[1]+88,y-22,thing_question) 
            break
    }
    draw_text(x+8,y-22,the_string)
    draw_sprite(sprTextCursor,cursor_image_index,x+8+string_width(the_string),y-22)
    
    if capital {
        draw_text(_x[1],_y[1],"A")
        draw_text(_x[2],_y[1],"B")
        draw_text(_x[3],_y[1],"C")
        draw_text(_x[4],_y[1],"D")
        draw_text(_x[5],_y[1],"E")
        draw_text(_x[6],_y[1],"F")
        draw_text(_x[7],_y[1],"G")
        draw_text(_x[8],_y[1],"H")
        draw_text(_x[9],_y[1],"I")
        draw_text(_x[10],_y[1]," ")
        draw_text(_x[11],_y[1]," ")
        draw_text(_x[12],_y[1],"-")
        draw_text(_x[13],_y[1],"@")
        draw_text(_x[14],_y[1],"[")
        
        draw_text(_x[1],_y[2],"J")
        draw_text(_x[2],_y[2],"K")
        draw_text(_x[3],_y[2],"L")
        draw_text(_x[4],_y[2],"M")
        draw_text(_x[5],_y[2],"N")
        draw_text(_x[6],_y[2],"O")
        draw_text(_x[7],_y[2],"P")
        draw_text(_x[8],_y[2],"Q")
        draw_text(_x[9],_y[2],"R")
        draw_text(_x[10],_y[2]," ")
        draw_text(_x[11],_y[2]," ")
        draw_text(_x[12],_y[2],"'")
        draw_text(_x[13],_y[2],"~")
        draw_text(_x[14],_y[2],"\")
        
        draw_text(_x[1],_y[3],"S")
        draw_text(_x[2],_y[3],"T")
        draw_text(_x[3],_y[3],"U")
        draw_text(_x[4],_y[3],"V")
        draw_text(_x[5],_y[3],"W")
        draw_text(_x[6],_y[3],"X")
        draw_text(_x[7],_y[3],"Y")
        draw_text(_x[8],_y[3],"Z")
        draw_text(_x[9],_y[3],"Space")
        draw_text(_x[10],_y[3]," ")
        draw_text(_x[11],_y[3]," ")
        draw_text(_x[12],_y[3],".")
        draw_text(_x[13],_y[3],"/")
        draw_text(_x[14],_y[3],"]")
    
    } else {
        draw_text(_x[1],_y[1],"a")
        draw_text(_x[2],_y[1],"b")
        draw_text(_x[3],_y[1],"c")
        draw_text(_x[4],_y[1],"d")
        draw_text(_x[5],_y[1],"e")
        draw_text(_x[6],_y[1],"f")
        draw_text(_x[7],_y[1],"g")
        draw_text(_x[8],_y[1],"h")
        draw_text(_x[9],_y[1],"i")
        draw_text(_x[10],_y[1]," ")
        draw_text(_x[11],_y[1]," ")
        draw_text(_x[12],_y[1],"-")
        draw_text(_x[13],_y[1],"@")
        draw_text(_x[14],_y[1],"[")
        
        draw_text(_x[1],_y[2],"j")
        draw_text(_x[2],_y[2],"k")
        draw_text(_x[3],_y[2],"l")
        draw_text(_x[4],_y[2],"m")
        draw_text(_x[5],_y[2],"n")
        draw_text(_x[6],_y[2],"o")
        draw_text(_x[7],_y[2],"p")
        draw_text(_x[8],_y[2],"q")
        draw_text(_x[9],_y[2],"r")
        draw_text(_x[10],_y[2]," ")
        draw_text(_x[11],_y[2]," ")
        draw_text(_x[12],_y[2],"'")
        draw_text(_x[13],_y[2],"~")
        draw_text(_x[14],_y[2],"\")
        
        draw_text(_x[1],_y[3],"s")
        draw_text(_x[2],_y[3],"t")
        draw_text(_x[3],_y[3],"u")
        draw_text(_x[4],_y[3],"v")
        draw_text(_x[5],_y[3],"w")
        draw_text(_x[6],_y[3],"x")
        draw_text(_x[7],_y[3],"y")
        draw_text(_x[8],_y[3],"z")
        draw_text(_x[9],_y[3],"Space")
        draw_text(_x[10],_y[3]," ")
        draw_text(_x[11],_y[3]," ")
        draw_text(_x[12],_y[3],".")
        draw_text(_x[13],_y[3],"/")
        draw_text(_x[14],_y[3],"]")
    }
    
    draw_text(_x[1],_y[4],"0")
    draw_text(_x[2],_y[4],"1")
    draw_text(_x[3],_y[4],"2")
    draw_text(_x[4],_y[4],"3")
    draw_text(_x[5],_y[4],"4")
    draw_text(_x[6],_y[4],"5")
    draw_text(_x[7],_y[4],"6")
    draw_text(_x[8],_y[4],"7")
    draw_text(_x[9],_y[4],"8")
    draw_text(_x[10],_y[4],"9")
    draw_text(_x[11],_y[4]," ")
    draw_text(_x[12],_y[4],"!")
    draw_text(_x[13],_y[4],"|")
    draw_text(_x[14],_y[4],"^")
    
    draw_text(_x[1],_y[5],"CAPITAL")
    draw_text(_x[5],_y[5],"small")
    draw_text(_x[12],_y[5],"?")
    draw_text(_x[13],_y[5],"$")
    draw_text(_x[14],_y[5],"_")
    
    draw_text(_x[1],_y[6],"I don't care")
    draw_text(_x[10],_y[6],"Backspace")
    draw_text(_x[14],_y[6],"OK")
    draw_sprite(spr_cursor,cursor_image_index,cursor_x-3,cursor_y+7)

} else {
    draw_sprite(sprProtag_f_d,cursor_image_index/2,_x[1],_y[1]-16)
    draw_window(_x[1]+16,_y[1]-40,11,4)
    draw_sprite(sprProtag_f_d,cursor_image_index/2,_x[1],_y[1]+16)
    draw_window(_x[1]+16,_y[1]-8,11,4)
    draw_sprite(sprProtag_f_d,cursor_image_index/2,_x[1],_y[1]+48)
    draw_window(_x[1]+16,_y[1]+24,11,4)
    draw_sprite(sprProtag_f_d,cursor_image_index/2,_x[1],_y[1]+80)
    draw_window(_x[1]+16,_y[1]+56,11,4)
    
    draw_window(_x[1]+104,_y[1]-40,16,6)
    draw_window(_x[1]+104,_y[1]+24,16,6)
    draw_window(_x[1]-16,_y[6]-8,31,4)
    draw_text(_x[3],_y[1]-30,global.s_name[1])
    draw_text(_x[3],_y[1]+2,global.s_name[2])
    draw_text(_x[3],_y[1]+34,global.s_name[3])
    draw_text(_x[3],_y[1]+66,global.s_name[4])
    draw_text(_x[8]+4,_y[1]-30,"Favourite food"+":")
    draw_text(_x[8]+4,_y[5]-30,"Coolest thing"+":")
    draw_text(_x[1],_y[6]+2,"Is this okay?")
    draw_text(_x[10],_y[6]+2,"Yes")
    draw_text(_x[14],_y[6]+2,"No")
    draw_set_halign(fa_right)
    draw_text(_x[14]+12,_y[1]-30,"#"+global.favfood)
    draw_text(_x[14]+12,_y[5]-30,"#"+global.favthing)
    draw_sprite(spr_cursor,cursor_image_index,cursor_x-3,cursor_y+9)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !inactive {
    if (player &lt;=4 and string_length(the_string) &lt; 6) or (player &gt; 4 and string_length(the_string) &lt; 9) {
        audio_play_sound(sndchoose,0,0)
        if cursor_y = _y[1] {
            if cursor_x = _x[1] { if capital { char = "A" } else { char = "a" } }
            if cursor_x = _x[2] { if capital { char = "B" } else { char = "b" } }
            if cursor_x = _x[3] { if capital { char = "C" } else { char = "c" } }
            if cursor_x = _x[4] { if capital { char = "D" } else { char = "d" } }
            if cursor_x = _x[5] { if capital { char = "E" } else { char = "e" } }
            if cursor_x = _x[6] { if capital { char = "F" } else { char = "f" } }
            if cursor_x = _x[7] { if capital { char = "G" } else { char = "g" } }
            if cursor_x = _x[8] { if capital { char = "H" } else { char = "h" } }
            if cursor_x = _x[9] { if capital { char = "I" } else { char = "i" } }
            if cursor_x = _x[12] { char = "-" }
            if cursor_x = _x[13] { char = "@" }
            if cursor_x = _x[14] { char = "[" }
            the_string = string_insert(char,the_string,string_length(the_string)+1)
            exit
        } else if cursor_y = _y[2] {
            if cursor_x = _x[1] { if capital { char = "J" } else { char = "j" } }
            if cursor_x = _x[2] { if capital { char = "K" } else { char = "k" } }
            if cursor_x = _x[3] { if capital { char = "L" } else { char = "l" } }
            if cursor_x = _x[4] { if capital { char = "M" } else { char = "m" } }
            if cursor_x = _x[5] { if capital { char = "N" } else { char = "n" } }
            if cursor_x = _x[6] { if capital { char = "O" } else { char = "o" } }
            if cursor_x = _x[7] { if capital { char = "P" } else { char = "p" } }
            if cursor_x = _x[8] { if capital { char = "Q" } else { char = "q" } }
            if cursor_x = _x[9] { if capital { char = "R" } else { char = "r" } }
            if cursor_x = _x[12] { char = "'" }
            if cursor_x = _x[13] { char = "~" }
            if cursor_x = _x[14] { char = "\" }
            the_string = string_insert(char,the_string,string_length(the_string)+1)
            exit
        } else if cursor_y = _y[3] {
            if cursor_x = _x[1] { if capital { char = "S" } else { char = "s" } }
            if cursor_x = _x[2] { if capital { char = "T" } else { char = "t" } }
            if cursor_x = _x[3] { if capital { char = "U" } else { char = "u" } }
            if cursor_x = _x[4] { if capital { char = "V" } else { char = "v" } }
            if cursor_x = _x[5] { if capital { char = "W" } else { char = "w" } }
            if cursor_x = _x[6] { if capital { char = "X" } else { char = "x" } }
            if cursor_x = _x[7] { if capital { char = "Y" } else { char = "y" } }
            if cursor_x = _x[8] { if capital { char = "Z" } else { char = "z" } }
            if cursor_x = _x[9] { if capital { char = " " } else { char = " " } }
            if cursor_x = _x[12] { char = "." }
            if cursor_x = _x[13] { char = "/" }
            if cursor_x = _x[14] { char = "]" }
            the_string = string_insert(char,the_string,string_length(the_string)+1)
            exit
        } else if cursor_y = _y[4] {
            if cursor_x = _x[1] { char = "0" }
            if cursor_x = _x[2] { char = "1" }
            if cursor_x = _x[3] { char = "2" }
            if cursor_x = _x[4] { char = "3" }
            if cursor_x = _x[5] { char = "4" }
            if cursor_x = _x[6] { char = "5" }
            if cursor_x = _x[7] { char = "6" }
            if cursor_x = _x[8] { char = "7" }
            if cursor_x = _x[9] { char = "8" }
            if cursor_x = _x[10] { char = "9" }
            if cursor_x = _x[12] { char = "!" }
            if cursor_x = _x[13] { char = "|" }
            if cursor_x = _x[14] { char = "^" }
            the_string = string_insert(char,the_string,string_length(the_string)+1)
            exit
        } else if cursor_y = _y[5]
        {
            if cursor_x = _x[1] { capital = true }
            if cursor_x = _x[5] { capital = false }
            if cursor_x = _x[12] { char = "?" }
            if cursor_x = _x[13] { char = "$" }
            if cursor_x = _x[14] { char = "_" }
            if cursor_x != _x[1] and cursor_x != _x[5] { the_string = string_insert(char,the_string,string_length(the_string)+1) }
            exit
        }
    }
    
    if cursor_y = _y[6]
    {
        if cursor_x = _x[1] { 
            the_string = dontcare[player,dontcareindex]
            if dontcareindex != 7 { 
                dontcareindex ++ 
            } else { 
                dontcareindex = 0 
            }
            audio_play_sound(sndchoose,0,0) 
        } else if cursor_x = _x[10] 
        { 
            if !done {
                if string_length(the_string) &gt; 0 {
                    the_string = string_delete(the_string,string_length(the_string),1)
                }
            } else {
                audio_stop_all()
                ini_save_data(0,0)
                audio_play_sound(sndWow,0,0)
                inactive = 1
                alarm[0] = 5*room_speed
            }
        } else if cursor_x = _x[14] {
            if !done  {
                if string_length(the_string) &gt; 0 { 
                    if player &lt;= 4 {
                        global.s_name[player] = the_string
                    } else if player = 5 {
                        global.favfood = the_string
                    } else if player = 6 {
                        global.favthing = the_string
                    }
                    player++
                    dontcareindex = 0
                    the_string = ""
                    audio_play_sound(sndokdesuka,0,0) 
                    if player = 7 { 
                        done = 1 
                        player++
                        cursor_x = _x[10]
                        cursor_y = _y[6]
                    } else {
                        cursor_x = _x[1]
                        cursor_y = _y[1]
                    }
                } else {
                    audio_play_sound(snderror,0,0) 
                }
            } else {
                audio_play_sound(sndchoose,0,0) 
                global.theroom = room
                instance_create(0,0,objFadeOut)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !inactive and player &lt; 7 {
    audio_play_sound(sndback,0,0)

    if string_length(the_string) &gt; 0 {
        the_string = string_delete(the_string,string_length(the_string),1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !inactive and player &lt; 7{
    audio_play_sound(sndselect2,0,0)
    if cursor_y = _y[1]  { cursor_y = _y[2] }
    else if cursor_y = _y[2]  { cursor_y = _y[3] }
    else if cursor_y = _y[3]  { cursor_y = _y[4] }
    else if cursor_y = _y[4]  { cursor_y = _y[5] }
    else if cursor_y = _y[5]  { cursor_y = _y[6] }
    else if cursor_y = _y[6]  { cursor_y = _y[1] }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !inactive {
    audio_play_sound(sndselect,0,0)
    if player &lt; 7 {
        if cursor_x = _x[1]  { if cursor_y = _y[5] { cursor_x = _x[5] } else { cursor_x = _x[2] } }
        else if cursor_x = _x[2]  { cursor_x = _x[3] }
        else if cursor_x = _x[3]  { cursor_x = _x[4] }
        else if cursor_x = _x[4]  { cursor_x = _x[5] }
        else if cursor_x = _x[5]  { if cursor_y = _y[5] { cursor_x = _x[12] } else { cursor_x = _x[6] } }
        else if cursor_x = _x[6]  { cursor_x = _x[7] }
        else if cursor_x = _x[7]  { cursor_x = _x[8] }
        else if cursor_x = _x[8]  { cursor_x = _x[9] }
        else if cursor_x = _x[9]  { cursor_x = _x[10] }
        else if cursor_x = _x[10] { if cursor_y = _y[4] { cursor_x = _x[12] } else { cursor_x = _x[11] } }
        else if cursor_x = _x[11] { cursor_x = _x[12] }
        else if cursor_x = _x[12] { cursor_x = _x[13] }
        else if cursor_x = _x[13] { cursor_x = _x[14] }
        else if cursor_x = _x[14] { cursor_x = _x[1] }
    } else {
        if cursor_x = _x[10] { cursor_x = _x[14] }
        else { cursor_x = _x[10] }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !inactive and player &lt; 7{
    audio_play_sound(sndselect2,0,0)
    if cursor_y = _y[1]  { cursor_y = _y[6] }
    else if cursor_y = _y[2]  { cursor_y = _y[1] }
    else if cursor_y = _y[3]  { cursor_y = _y[2] }
    else if cursor_y = _y[4]  { cursor_y = _y[3] }
    else if cursor_y = _y[5]  { cursor_y = _y[4] }
    else if cursor_y = _y[6]  { 
        if cursor_x = _x[10] {
            cursor_y = _y[4] 
        } else {
            cursor_y = _y[5] 
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !inactive {
    audio_play_sound(sndselect,0,0)
    if player &lt; 7 {
        if cursor_x = _x[1] { cursor_x = _x[14] }
        else if cursor_x = _x[2] { cursor_x = _x[1] }
        else if cursor_x = _x[3] { cursor_x = _x[2] }
        else if cursor_x = _x[4] { cursor_x = _x[3] }
        else if cursor_x = _x[5] { 
            if cursor_y = _y[5] { 
                cursor_x = _x[1] 
            } else {
                cursor_x = _x[4] 
            }
        }
        else if cursor_x = _x[6] { cursor_x = _x[5] }
        else if cursor_x = _x[7] { cursor_x = _x[6] }
        else if cursor_x = _x[8] { cursor_x = _x[7] }
        else if cursor_x = _x[9] { cursor_x = _x[8] }
        else if cursor_x = _x[10] { cursor_x = _x[9] }
        else if cursor_x = _x[11] { cursor_x = _x[10] }
        else if cursor_x = _x[12] { 
            if cursor_y = _y[4] { 
                cursor_x = _x[10] 
            } else if cursor_y = _y[5] { 
                cursor_x = _x[5] 
            } else { 
                cursor_x = _x[11] 
            } 
        }
        else if cursor_x = _x[13] { cursor_x = _x[12] }
        else if cursor_x = _x[14] { cursor_x = _x[13] }
    } else {
        if cursor_x = _x[10] { cursor_x = _x[14] }
        else { cursor_x = _x[10] }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
