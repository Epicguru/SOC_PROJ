<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>water = 0
stairs_ang = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y

water = position_meeting(x,y,objWater)

if position_meeting(x,y,objStairs) {
    stairs_ang = -45
} else if position_meeting(x,y,objStairs2) {
    stairs_ang = 45
} else {
    stairs_ang = 0
}

if (direction &gt;= 0 and direction &lt; 45/2) or (direction &gt;= 315+45/2 and direction &lt; 360) {
    dir = 0-stairs_ang
} else if (direction &gt;= 45/2 and direction &lt; 45+45/2) {
    dir = 45-stairs_ang
} else if (direction &gt;= 45+45/2 and direction &lt; 90+45/2) {
    dir = 90-stairs_ang
} else if (direction &gt;= 90+45/2 and direction &lt; 135+45/2) {
    dir = 135-stairs_ang
} else if (direction &gt;= 135+45/2 and direction &lt; 180+45/2) {
    dir = 180-stairs_ang
} else if (direction &gt;= 180+45/2 and direction &lt; 225+45/2) {
    dir = 225-stairs_ang
} else if (direction &gt;= 225+45/2 and direction &lt; 270+45/2) {
    dir = 270-stairs_ang
} else if (direction &gt;= 270+45/2 and direction &lt; 315+45/2) {
    dir = 315-stairs_ang
}

if dir &lt; 0 {
    dir = 360+dir
} else if dir = 360 {
    dir = 0
}

if !position_meeting(x,y,objLadder) {
    sprite_index = spr_walking[dir,global.dead[player_index+1]]
} else {
    sprite_index = spr_climbing[0]
}

if instance_exists(objPlayer) {
    if objPlayer.speed = 0 {
        image_index = 0
        image_speed = 0
    } else {
        switch player_index {
            case 1:
                image_speed = 0.15/(2*global.s_numb[2]+1)
                break;
            case 2:
                image_speed = 0.15/(2*global.s_numb[3]+1)
                break;
            case 3:
                image_speed = 0.15/(2*global.s_numb[4]+1)
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !water {
    draw_sprite(sprShadow,0,x,y)
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
} else {
    draw_sprite_part_ext(sprite_index,image_index,0,0,sprite_width,2*sprite_height/3,x-sprite_get_xoffset(sprite_index),y-floor(2*sprite_height/3),image_xscale,image_yscale,image_blend,image_alpha)
    draw_sprite(sprWaterRipple,image_index,x,y)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,12</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
