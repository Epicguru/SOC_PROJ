<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = 0
img = 0
type = 0
backfire = 0
notpsi = 0
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objBattleMsg) or instance_exists(objEnStatDownDamage){
    alarm[11] = 1
} else {
    with objTurnMaster { event_perform(ev_other,ev_user0) }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objBattleMsg) {
    alarm[10] = 1
} else {
    var a;
    a = instance_create(0,0,objBattleMsg); 
    a.strno = 0;
    if global.enemy[enmy].cantconcentrate {
        a.str[0] = "...But it didn't work very well!"
    } else {
        a.str[0] = "...But "+(global.enemy[enmy].e_pron)+" didn't have enough PP."
    }
    alarm[11] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objBattleMsg) {
    alarm[3] = 1
} else {
    var msg, list, ailment;
    msg = ""
    ailment = ""
    var a = instance_create(0,0,objBattleMsg);
    a.strno = 0
    failed = 0
    var list;
    list = ds_list_create();
    
    en_random_choser_ignore_death()
    
    switch type {
        case 0:
            if !global.dead[tgt] {
                if global.s_crying[tgt] { ds_list_add(list,"crying"); }
                if global.s_asleep[tgt] { ds_list_add(list,"asleep"); }
            } else {
                failed = 1
            }
            break;
        case 1:
            if !global.dead[tgt] {
                if global.s_crying[tgt]   { ds_list_add(list,"crying"); }
                if global.s_asleep[tgt]   { ds_list_add(list,"asleep"); }
                if global.s_poison[tgt]   { ds_list_add(list,"poison"); }
                if global.s_infected[tgt] { ds_list_add(list,"infected"); }
                if global.s_strange[tgt]  { ds_list_add(list,"strange");  }
            } else {
                failed = 1
            }
            break;
        case 2:
        case 3:
            if !global.dead[tgt] {
                if global.s_crying[tgt]   { ds_list_add(list,"crying"); }
                if global.s_asleep[tgt]   { ds_list_add(list,"asleep"); }
                if global.s_poison[tgt]   { ds_list_add(list,"poison"); }
                if global.s_infected[tgt] { ds_list_add(list,"infected"); }
                if global.s_strange[tgt]  { ds_list_add(list,"strange");  }
                if global.s_shocked[tgt]  { ds_list_add(list,"shocked");  }
                if global.s_numb[tgt]  { ds_list_add(list,"numb");  }
            } else {
                ailment = "death"
            }
            break;
    }
    
    ds_list_shuffle(list);
    if !ds_list_empty(list) {ailment = ds_list_find_value(list, 0);}
    ds_list_destroy(list);
    
    if ailment = "death" and type = 2 {
        failed = (random(4) &lt; 1)
    }
    
    if ailment != "" and !failed {
        switch ailment {
            case "crying":
                global.s_crying[tgt] = 0
                msg = global.s_name[tgt] + " finally stopped crying!"
                break
            case "asleep":
                global.s_asleep[tgt] = 0
                msg = global.s_name[tgt] + " woke up!"
                break;
            case "poison":
                global.s_poison[tgt] = 0
                msg = "The poison was removed from#   " + global.s_name[tgt] + "'s body!"
                break;
            case "infected":
                global.s_infected[tgt] = 0
                msg = "The "+choose("biohazard","infection","infectious agent","pathogen")+" was removed from#   " + global.s_name[tgt] + "'s body!"
                break;
            case "strange":
                global.s_strange[tgt] = 0
                msg = global.s_name[tgt] + " stopped feeling strange!"
                break;
            case "shocked":
                global.s_shocked[tgt] = 0
                msg = global.s_name[tgt] + " got over the shock!"
                break;
            case "numb":
                global.s_shocked[tgt] = 0
                msg = "The "+choose("numbness","paralysis")+" faded from#   "+global.s_name[tgt] + "'s body!"
                break;  
            case "death":
                global.dead[tgt] = 0
                msg = global.s_name[tgt] + choose(" was revived!"," is back!")
                if type = 2 {
                    global.s_hp[tgt] = ceil(global.s_hpmax[tgt]/2)
                } else {
                    global.s_hp[tgt] = global.s_hpmax[tgt]
                }
                break;
        }
        a.str[0] = msg
        with instance_create(global.healthbar[tgt].x,global.healthbar[tgt].y,objHealthBarRed) { 
            color = make_color_rgb(8,240,96);
        } 
        audio_play_sound(sndheal2,0,0)
    } else {
        a.str[0] = "It had no effect on "+global.s_name[tgt] + "!";
    }
    alarm[11] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objBattleMsg) {
    alarm[2] = 1
} else {
    var msg, list, ailment;
    msg = ""
    ailment = ""
    var a = instance_create(0,0,objBattleMsg);
    a.strno = 0
    var list;
    list = ds_list_create();
    random_choser_extra2()
    
    switch type {
        case 0:
            if global.enemy[tgt].crying { ds_list_add(list,"crying"); }
            if global.enemy[tgt].asleep { ds_list_add(list,"asleep"); }
            break;
        case 1:
            if global.enemy[tgt].crying   { ds_list_add(list,"crying"); }
            if global.enemy[tgt].asleep   { ds_list_add(list,"asleep"); }
            if global.enemy[tgt].poison   { ds_list_add(list,"poison"); }
            if global.enemy[tgt].infected { ds_list_add(list,"infected"); }
            if global.enemy[tgt].strange  { ds_list_add(list,"strange");  }
        case 2:
        case 3:
            if global.enemy[tgt].crying   { ds_list_add(list,"crying"); }
            if global.enemy[tgt].asleep   { ds_list_add(list,"asleep"); }
            if global.enemy[tgt].poison   { ds_list_add(list,"poison"); }
            if global.enemy[tgt].infected { ds_list_add(list,"infected"); }
            if global.enemy[tgt].strange  { ds_list_add(list,"strange");  }
            if global.enemy[tgt].shocked  { ds_list_add(list,"shocked");  }
            if global.enemy[tgt].numb     { ds_list_add(list,"numb");  }
            break;
    }
    
    ds_list_shuffle(list);
    if !ds_list_empty(list) {ailment = ds_list_find_value(list, 0);}
    ds_list_destroy(list);
    
    if ailment != ""{
        switch ailment {
            case "crying":
                global.enemy[tgt].crying = 0
                msg = upper(global.enemy[tgt].e_art) + global.enemy[tgt].e_name + " finally stopped crying!"
                break
            case "asleep":
                global.enemy[tgt].asleep = 0
                msg = upper(global.enemy[tgt].e_art) + global.enemy[tgt].e_name + " woke up!"
                break;
            case "poison":
                global.enemy[tgt].poison = 0
                msg = "The poison was removed from#   " + global.enemy[tgt].e_art + global.enemy[tgt].e_name + "'s body!"
                break;
            case "infected":
                global.enemy[tgt].infected = 0
                msg = "The "+choose("biohazard","infection","infectious agent","pathogen")+" was removed from#   " + global.enemy[tgt].e_art + global.enemy[tgt].e_name + "'s body!"
                break;
            case "strange":
                global.enemy[tgt].strange = 0
                msg = upper(global.enemy[tgt].e_art) + global.enemy[tgt].e_name + " stopped feeling strange!"
                break;
            case "shocked":
                global.enemy[tgt].shocked = 0
                msg = upper(global.enemy[tgt].e_art) + global.enemy[tgt].e_name + " got over the shock!"
                break;
            case "numb":
                global.enemy[tgt].shocked = 0
                msg = "The "+choose("numbness","paralysis")+" faded from#   "+global.enemy[tgt].e_art + global.enemy[tgt].e_name + "'s body!"
                break;  
        }
        a.str[0] = msg
        audio_play_sound(sndheal2,0,0)
    } else {
        a.str[0] = "It had no effect on "+upper(global.enemy[tgt].e_art) + global.enemy[tgt].e_name + "!"
    }
    alarm[11] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a,b;
a = instance_create(0,0,objBattleMsg); 

switch type {
    case 0: b = "["; break;
    case 1: b = "\"; break;
    case 2: b = "]"; break;
    case 3: b = "_"; break;
}

if !global.enemy[enmy].strange {
    a.strno = 0;
    if global.custom_msg != 0 { a.str[0] = global.custom_msg[0]; audio_play_sound(sndeattack,0,0); } 
    else { a.str[0] = upper(global.enemy[enmy].e_art)+global.enemy[enmy].e_name+" tried Healing "+b+"!"; audio_play_sound(sndepsi,0,0);}
} else {
    a.strno = 1;
    a.str[0] = upper(global.enemy[enmy].e_art)+global.enemy[enmy].e_name+" is feeling a little strange...";
    if global.custom_msg != 0 or notpsi { a.str[1] = global.custom_msg[0]; audio_play_sound(sndeattack,0,0); } 
    else { a.str[1] = upper(global.enemy[enmy].e_art)+global.enemy[enmy].e_name+" tried Healing "+b+"!"; audio_play_sound(sndepsi,0,0); }
}

if global.enemy[enmy].e_pp &gt; 0 and !global.enemy[enmy].cantconcentrate or notpsi {
    if !backfire { backfire = (global.enemy[enmy].strange and random(100) &lt; 50) }
    if !backfire {
        alarm[2] = 1
    } else {
        alarm[3] = 1
    }
} else {
    alarm[10] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
