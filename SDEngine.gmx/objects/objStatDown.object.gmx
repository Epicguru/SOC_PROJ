<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-1000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sndppsi,0,0)
rounds = 1
failed = 0
type = 0
backfire = 0
dmg = 0
stat = 0 //0- OFF, 1- DEF, 2- GUTS
_stat = ""
b = 0
val = 0
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objBattleMsg) {
    alarm[11] = 1
} else {
    with objTurnMaster { event_perform(ev_other,ev_user0) }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objBattleMsg) {
    alarm[9] = 1
} else {
    var a;
    a = instance_create(0,0,objBattleMsg); 
    a.strno = 0;
    a.str[0] = "...But it didn't work very well!"
    alarm[11] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objStatDownFx) or instance_exists(objBattleMsg) {
    alarm[3] = 1
} else {
    if type = 0 {
        var val;
        en_random_choser()
        var a = instance_create(0,0,objBattleMsg);
        a.strno = 0
        
        if !failed {
            switch stat {
                case 0:
                    if global.s_off[tgt] &lt;= floor(3*global.s_realoff[tgt]/4) {
                        failed = 1
                    } else {
                        val = global.s_off[tgt]
                        if global.s_off[tgt] - max(floor(global.s_off[tgt]/16),1) &lt; floor(3*global.s_realoff[tgt]/4) {
                            global.s_off[tgt]-=global.s_off[tgt]-floor(3*global.s_realoff[tgt]/4)
                        } else {
                            global.s_off[tgt] -= max(floor(global.s_off[tgt]/16),1)
                        }
                        val -= global.s_off[tgt]
                    }
                    break;
                case 1:
                    if global.s_def[tgt] &lt;= floor(3*global.s_realdef[tgt]/4) {
                        failed = 1
                    } else {
                        val = global.s_def[tgt]
                        if global.s_def[tgt] - max(floor(global.s_def[tgt]/16),1) &lt; floor(3*global.s_realdef[tgt]/4) {
                            global.s_def[tgt]-=global.s_def[tgt]-floor(3*global.s_realdef[tgt]/4)
                        } else {
                            global.s_def[tgt] -= max(floor(global.s_def[tgt]/16),1)
                        }
                        val -= global.s_def[tgt]
                    }
                    break;
                case 2:
                    if global.s_guts[tgt] &lt;= floor(3*global.s_realguts[tgt]/4) {
                        failed = 1
                    } else {
                        val = global.s_guts[tgt]
                        if global.s_guts[tgt] - max(floor(global.s_guts[tgt]/16),1) &lt; floor(3*global.s_realguts[tgt]/4) {
                            global.s_guts[tgt]-=global.s_guts[tgt]-floor(3*global.s_realguts[tgt]/4)
                        } else {
                            global.s_guts[tgt] -= max(floor(global.s_guts[tgt]/16),1)
                        }
                        val -= global.s_guts[tgt]
                    }
                    break;
            }
        }
        
        if !failed and val &gt; 0{
            a.str[0] = global.s_name[tgt] +"'s "+lower(_stat)+" went down by "+string(abs(val))+"!"
            var effect;
            effect = instance_create(global.healthbar[tgt].x+28,global.healthbar[tgt].y+32,objEnStatDownGFX)
            effect.alarm[0] = 1
            switch stat {
                case 0:
                    effect.color = make_color_rgb(247,127,0);
                    break;
                case 1:
                    effect.color = make_color_rgb(36,136,253);
                    break;
                case 2:
                    effect.color = make_color_rgb(34,177,76);
                    break;
            }
            audio_play_sound(sndStatDown,0,0)
        } else {
            a.str[0] = "It had no effect on "+global.s_name[tgt] + "!"
        }
        alarm[11] = 1
    } else {
        if rounds &gt; global.pl_count {
            alarm[11] = 1
            exit
        } else {
            if global.dead[rounds] {
                alarm[3] = 1
                rounds++
                exit
            }
            failed = 0
            //failed = (random(80) &gt; global.s_luck[global._pl])
            
            var a = instance_create(0,0,objBattleMsg);
            a.strno = 0
    
            if !failed {
                switch stat {
                    case 0:
                        if global.s_off[rounds] &lt;= floor(3*global.s_realoff[rounds]/4) {
                            failed = 1
                        } else {
                            val = global.s_off[rounds]
                            if global.s_off[rounds] - max(floor(global.s_off[rounds]/16),1) &lt; floor(3*global.s_realoff[rounds]/4) {
                                global.s_off[rounds]-=global.s_off[rounds]-floor(3*global.s_realoff[rounds]/4)
                            } else {
                                global.s_off[rounds] -= max(floor(global.s_off[rounds]/16),1)
                            }
                            val -= global.s_off[rounds]
                        }
                        break;
                    case 1:
                        if global.s_def[rounds] &lt;= floor(3*global.s_realdef[rounds]/4) {
                            failed = 1
                        } else {
                            val = global.s_def[rounds]
                            if global.s_def[rounds] - max(floor(global.s_def[rounds]/16),1) &lt; floor(3*global.s_realdef[rounds]/4) {
                                global.s_def[rounds]-=global.s_def[rounds]-floor(3*global.s_realdef[rounds]/4)
                            } else {
                                global.s_def[rounds] -= max(floor(global.s_def[rounds]/16),1)
                            }
                            val -= global.s_def[rounds]
                        }
                        break;
                    case 2:
                        if global.s_guts[rounds] &lt;= floor(3*global.s_realguts[rounds]/4) {
                            failed = 1
                        } else {
                            val = global.s_guts[rounds]
                            if global.s_guts[rounds] - max(floor(global.s_guts[rounds]/16),1) &lt; floor(3*global.s_realguts[rounds]/4) {
                                global.s_guts[rounds]-=global.s_guts[rounds]-floor(3*global.s_realguts[rounds]/4)
                            } else {
                                global.s_guts[rounds] -= max(floor(global.s_guts[rounds]/16),1)
                            }
                            val -= global.s_guts[rounds]
                        }
                        break;
                }
            }
            
            if !failed and val &gt; 0{
                a.str[0] = global.s_name[rounds] +"'s "+lower(_stat)+" went down by "+string(abs(val))+"!"
                var effect;
                effect = instance_create(global.healthbar[rounds].x+28,global.healthbar[rounds].y+32,objEnStatDownGFX)
                effect.alarm[0] = 1
                switch stat {
                    case 0:
                        effect.color = make_color_rgb(247,127,0);
                        break;
                    case 1:
                        effect.color = make_color_rgb(36,136,253);
                        break;
                    case 2:
                        effect.color = make_color_rgb(34,177,76);
                        break;
                }
                audio_play_sound(sndStatDown,0,0)
            } else {
                a.str[0] = "It had no effect on "+global.s_name[rounds] + "!"
            }
            rounds++
            alarm[3] = 1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objStatDownFx) or instance_exists(objBattleMsg) {
    alarm[2] = 1
} else {
    if type = 0 {
        val = 0

        var a = instance_create(0,0,objBattleMsg);
        a.strno = 0
        
        if !failed {
            switch stat {
                case 0:
                    if global.target[global._pl].e_off &lt;= floor(3*global.target[global._pl].e_realoff/4) {
                        failed = 1
                    } else {
                        val = global.target[global._pl].e_off
                        if global.target[global._pl].e_off - max(floor(global.target[global._pl].e_off/16),1) &lt; floor(3*global.target[global._pl].e_realoff/4) {
                            global.target[global._pl].e_off-=global.target[global._pl].e_off-floor(3*global.target[global._pl].e_realoff/4)
                        } else {
                            global.target[global._pl].e_off -= max(floor(global.target[global._pl].e_off/16),1)
                        }
                        val -= global.target[global._pl].e_off
                    }
                    break;
                case 1:
                    if global.target[global._pl].e_def &lt;= floor(3*global.target[global._pl].e_realdef/4) {
                        failed = 1
                    } else {
                        val = global.target[global._pl].e_def
                        if global.target[global._pl].e_def - max(floor(global.target[global._pl].e_def/16),1) &lt; floor(3*global.target[global._pl].e_realdef/4) {
                            global.target[global._pl].e_def-=global.target[global._pl].e_def-floor(3*global.target[global._pl].e_realdef/4)
                        } else {
                            global.target[global._pl].e_def -= max(floor(global.target[global._pl].e_def/16),1)
                        }
                        val -= global.target[global._pl].e_def
                    }
                    break;
                case 2:
                    if global.target[global._pl].e_guts &lt;= floor(3*global.target[global._pl].e_realguts/4) {
                        failed = 1
                    } else {
                        val = global.target[global._pl].e_guts
                        if global.target[global._pl].e_guts - max(floor(global.target[global._pl].e_guts/16),1) &lt; floor(3*global.target[global._pl].e_realguts/4) {
                            global.target[global._pl].e_guts-=global.target[global._pl].e_guts-floor(3*global.target[global._pl].e_realguts/4)
                        } else {
                            global.target[global._pl].e_guts -= max(floor(global.target[global._pl].e_guts/16),1)
                        }
                        val -= global.target[global._pl].e_guts
                    }
                    break;
            }
        }
        
        if !failed and val &gt; 0 {
            a.str[0] = upper(global.target[global._pl].e_art) + global.target[global._pl].e_name +"'s "+lower(_stat)+" went down by "+string(abs(val))+"!"
            var effect;
            effect = instance_create(global.target[global._pl].x,global.target[global._pl].y,objEnStatDownGFX)
            effect.alarm[0] = 1
            switch stat {
                case 0:
                    effect.color = make_color_rgb(247,127,0);
                    break;
                case 1:
                    effect.color = make_color_rgb(36,136,253);
                    break;
                case 2:
                    effect.color = make_color_rgb(34,177,76);
                    break;
            }
            audio_play_sound(sndStatDown,0,0)
        } else {
            a.str[0] = "It had no effect on "+global.target[global._pl].e_art + global.target[global._pl].e_name + "!"
        }
        alarm[11] = 1
    } else {
        if rounds &gt; global.en_count {
            alarm[11] = 1
            exit
        } else {
            if global.enemy[rounds] = 0 {
                alarm[2] = 1
                rounds++
                exit
            }
            //failed = (random(80) &gt; global.s_luck[global._pl])
            failed = 0
            val = 0
            
            var a = instance_create(0,0,objBattleMsg);
            a.strno = 0
    
            if !failed {
                switch stat {
                    case 0:
                        if global.enemy[rounds].e_off &lt;= floor(3*global.enemy[rounds].e_realoff/4) {
                            failed = 1
                        } else {
                            val = global.enemy[rounds].e_off
                            if global.enemy[rounds].e_off - max(floor(global.enemy[rounds].e_off/16),1) &lt; floor(3*global.enemy[rounds].e_realoff/4) {
                                global.enemy[rounds].e_off-=global.enemy[rounds].e_off-floor(3*global.enemy[rounds].e_realoff/4)
                            } else {
                                global.enemy[rounds].e_off -= max(floor(global.enemy[rounds].e_off/16),1)
                            }
                            val -= global.enemy[rounds].e_off
                        }
                        break;
                    case 1:
                        if global.enemy[rounds].e_def &lt;= floor(3*global.enemy[rounds].e_realdef/4) {
                            failed = 1
                        } else {
                            val = global.enemy[rounds].e_def
                            if global.enemy[rounds].e_def - max(floor(global.enemy[rounds].e_def/16),1) &lt; floor(3*global.enemy[rounds].e_realdef/4) {
                                global.enemy[rounds].e_def-=global.enemy[rounds].e_def-floor(3*global.enemy[rounds].e_realdef/4)
                            } else {
                                global.enemy[rounds].e_def -= max(floor(global.enemy[rounds].e_def/16),1)
                            }
                            val -= global.enemy[rounds].e_def
                        }
                        break;
                    case 2:
                        if global.enemy[rounds].e_guts &lt;= floor(3*global.enemy[rounds].e_realguts/4) {
                            failed = 1
                        } else {
                            val = global.enemy[rounds].e_guts
                            if global.enemy[rounds].e_guts - max(floor(global.enemy[rounds].e_guts/16),1) &lt; floor(3*global.enemy[rounds].e_realguts/4) {
                                global.enemy[rounds].e_guts-=global.enemy[rounds].e_guts-floor(3*global.enemy[rounds].e_realguts/4)
                            } else {
                                global.enemy[rounds].e_guts -= max(floor(global.enemy[rounds].e_guts/16),1)
                            }
                            val -= global.enemy[rounds].e_guts
                        }
                        break;
                }
            }
            
            if !failed and val &gt; 0{
                a.str[0] = upper(global.enemy[rounds].e_art) + global.enemy[rounds].e_name +"'s "+lower(_stat)+" went down by "+string(abs(val))+"!"
                var effect;
                effect = instance_create(global.enemy[rounds].x,global.enemy[rounds].y,objEnStatDownGFX)
                effect.alarm[0] = 1
                switch stat {
                    case 0:
                        effect.color = make_color_rgb(247,127,0);
                        break;
                    case 1:
                        effect.color = make_color_rgb(36,136,253);
                        break;
                    case 2:
                        effect.color = make_color_rgb(34,177,76);
                        break;
                }
                audio_play_sound(sndStatDown,0,0)
            } else {
                a.str[0] = "It had no effect on "+global.enemy[rounds].e_art + global.enemy[rounds].e_name + "!"
            }
            rounds++
            alarm[2] = 1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objBattleMsg) {
    alarm[1] = 1
} else {
    if global.s_strange[global._pl] and random(100)&lt;50 {
        backfire = 1
    } 
    with instance_create(global.target[global._pl].x,global.target[global._pl].y,objStatDownFx) {
        type = objStatDown.type
        backfire = objStatDown.backfire
    }
    if !backfire {
        alarm[2] = 1
    } else {
        alarm[3] = 1 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var a;
a = instance_create(0,0,objBattleMsg);
switch type{
    case 0: b = "["; break;
    case 1: b = "_"; break;
}

switch stat {
    case 0:
        _stat = "Offense"
        break;
    case 1:
        _stat = "Defense"
        break;
    case 2:
        _stat = "Guts"
        break;
}

if !global.s_strange[global._pl] {
    a.strno = 0;
    a.str[0] = global.s_name[global._pl] + " tried "+_stat+" Down "+b+"!"
} else {
    a.strno = 1;
    a.str[0] = global.s_name[global._pl] + " is feeling a little strange..."
    a.str[1] = global.s_name[global._pl] + " tried "+_stat+" Down "+b+"!"
}

if !global.s_cantconcentrate[global._pl] {
    alarm[1] = 1
} else {
    alarm[9] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
