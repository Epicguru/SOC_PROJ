<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num = 0
num_val = 0
ok = 0

_x[1]=36+v_offset
_x[2]=165+v_offset

_y[1]=5+8
_y[2]=15+8
_y[3]=25+8
_y[4]=35+8
_y[5]=45+8

eqp = ""
page = 1

cursor_x  = _x[1]
cursor_y  = _y[1]
cursor_image_index = 0
cursor_timer = 0

event_user(0)
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ok = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard controls
if ok {
    if keyboard_check_pressed(global.kb_back) {
        with objBattleController { ok = 1 }
        audio_play_sound(sndback,0,0)
        instance_destroy();
    } else if keyboard_check_pressed(global.kb_choose) {
        if num !=0 {
            if global.item[num,3] != "" {
                audio_play_sound(sndchoose,0,0)
                global.itemtouse[objBattleController._turn] = num_val
                ok = 0
                act[objBattleController._turn] = global.item[num,3]
                switch global.item[num,10] {
                    case 0:
                        instance_create(0,0,objPlayerSelector)
                        break;
                    case 1:
                    case 3:
                        if objBattleController._turn &gt; global.pl_count-1 {
                            with objTurnMaster { event_user(2) }
                            turn = 1
                            with objBattleController { in_battle = 1; ok = 1; }
                        } else {
                            with objBattleController { ok = 1; _turn++; cursor_x = _x[1]; cursor_y = _y[1] }
                        }
                        instance_destroy();
                        break;
                    case 2:
                        instance_create(0,0,objTargetSelector)
                        break;
                }
            } else {
                audio_play_sound(snderror,0,0)
            }
        }
    } else if keyboard_check_pressed(vk_left) {
        audio_play_sound(sndselect,0,0)
        if cursor_x = _x[2]
        {
        cursor_x = _x[1]
        }
        else if cursor_x = _x[1]
        {
        cursor_x = _x[2]
        }
    } else if keyboard_check_pressed(vk_up) {
        audio_play_sound(sndselect2,0,0)
        if cursor_y = _y[1] {
            if page == 1 {
                page = 2
            } else {
                page = 1
            }
            event_perform(ev_other,ev_user0)
            cursor_y = _y[5]
        } else if cursor_y = _y[2] {
            cursor_y = _y[1]
        } else if cursor_y = _y[3] {
            cursor_y = _y[2]
        } else if cursor_y = _y[4] {
            cursor_y = _y[3]
        } else if cursor_y = _y[5] {
            cursor_y = _y[4]
        }
    } else if keyboard_check_pressed(vk_right) {
        audio_play_sound(sndselect,0,0)
        if cursor_x = _x[1]
        {
        cursor_x = _x[2]
        }
        else if cursor_x = _x[2]
        {
        cursor_x = _x[1]
        }
    } else if keyboard_check_pressed(vk_down) {
        audio_play_sound(sndselect2,0,0)
        if cursor_y = _y[1] {
            cursor_y = _y[2]
        } else if cursor_y = _y[2] {
            cursor_y = _y[3]
        } else if cursor_y = _y[3] {
            cursor_y = _y[4]
        } else if cursor_y = _y[4] {
            cursor_y = _y[5]
        } else if cursor_y = _y[5] {
            if page == 1 {
                page = 2
            } else {
                page = 1
            }
            event_perform(ev_other,ev_user0)
            cursor_y = _y[1]
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursor_timer +=0.25

if cursor_timer = 1
{
cursor_image_index +=1
cursor_timer = 0
}

visible = !(instance_exists(objTargetSelector) or instance_exists(objPlayerSelector))
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if cursor_x = _x[1] and cursor_y = _y[1] { num = inv[1] ; num_val = 10*page-10 }
if cursor_x = _x[2] and cursor_y = _y[1] { num = inv[2] ; num_val = 1+10*page-10 }
if cursor_x = _x[1] and cursor_y = _y[2] { num = inv[3] ; num_val = 2+10*page-10 }
if cursor_x = _x[2] and cursor_y = _y[2] { num = inv[4] ; num_val = 3+10*page-10 }
if cursor_x = _x[1] and cursor_y = _y[3] { num = inv[5] ; num_val = 4+10*page-10 }
if cursor_x = _x[2] and cursor_y = _y[3] { num = inv[6] ; num_val = 5+10*page-10 }
if cursor_x = _x[1] and cursor_y = _y[4] { num = inv[7] ; num_val = 6+10*page-10 }
if cursor_x = _x[2] and cursor_y = _y[4] { num = inv[8] ; num_val = 7+10*page-10 }
if cursor_x = _x[1] and cursor_y = _y[5] { num = inv[9] ; num_val = 8+10*page-10 }
if cursor_x = _x[2] and cursor_y = _y[5] { num = inv[10] ; num_val = 9+10*page-10 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var eqpchk;
for (var j=0; j&lt;5; j++) {
    eqpchk[j] = 0; 
}
for (var i=0; i&lt;20; i++) {
    inv[i+1] =  ds_list_find_value(global.inv[global.current_inv],i+10*(page-1))
    
    if global.weap_equip[global.current_inv+1] = inv[i+1] or
    global.body_equip[global.current_inv+1] = inv[i+1] or
    global.arm_equip[global.current_inv+1] = inv[i+1] or
    global.other_equip[global.current_inv+1] = inv[i+1] {
        if inv[i+1] != 0 and eqpchk[0] != inv[i+1] and eqpchk[1] != inv[i+1] and eqpchk[2] != inv[i+1] and eqpchk[3] != inv[i+1] {
            eqp[i+1] = "\#"
            if global.weap_equip[global.current_inv+1] = inv[i+1] { eqpchk[0] = inv[i+1] }
            if global.body_equip[global.current_inv+1] = inv[i+1] { eqpchk[1] = inv[i+1] }
            if global.arm_equip[global.current_inv+1] = inv[i+1] { eqpchk[2] = inv[i+1] }
            if global.other_equip[global.current_inv+1] = inv[i+1] { eqpchk[3] = inv[i+1] }
        } else {
            eqp[i+1] = ""
        }
    } else {
        eqp[i+1] = ""
    }
}
eqpchk = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_window(x+v_offset,y+8,36,8)
draw_set_font(global.thenfont)
draw_set_halign(fa_left)
draw_set_color(c_white)

if !instance_exists(objPlayerSelector) and !instance_exists(objTargetSelector) {
    draw_window(16+v_offset,192,36,6)
    draw_text_ext(_x[1]-6,198,global.item[num,2],12,500)
}

draw_text(_x[1],_y[1],eqp[1]+global.item[inv[1],1])
draw_text(_x[2],_y[1],eqp[2]+global.item[inv[2],1])
draw_text(_x[1],_y[2],eqp[3]+global.item[inv[3],1])
draw_text(_x[2],_y[2],eqp[4]+global.item[inv[4],1])
draw_text(_x[1],_y[3],eqp[5]+global.item[inv[5],1])
draw_text(_x[2],_y[3],eqp[6]+global.item[inv[6],1])
draw_text(_x[1],_y[4],eqp[7]+global.item[inv[7],1])
draw_text(_x[2],_y[4],eqp[8]+global.item[inv[8],1])
draw_text(_x[1],_y[5],eqp[9]+global.item[inv[9],1])
draw_text(_x[2],_y[5],eqp[10]+global.item[inv[10],1])

draw_set_color(c_black)

if page == 2 {
    draw_sprite_ext(spr_continue,cursor_image_index,155+v_offset,6+8,1,-1,0,c_white,1)
} else {
    draw_sprite_ext(spr_continue,cursor_image_index,155+v_offset,57+8,1,1,0,c_white,1)
}

draw_sprite(spr_cursor,cursor_image_index,cursor_x-3,cursor_y+8)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>144,144</point>
  </PhysicsShapePoints>
</object>
