<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parDeactivator</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_x[1] = 20+v_offset
_x[2] = 92+v_offset
_x[3] = 130+v_offset
_x[4] = 160+v_offset
_y[1]  = 17
_y[2]  = 49
_y[3]  = 81
_y[4]  = 134
_y[5]  = 150
mode = 0
ok = 1

ini_open(global.config_fname)

name[1] = ini_read_string("slot1","Name","");
place[1] = ini_read_string("slot1","Place","");
level[1] = ini_read_real("slot1","Level",0);
time[1] = ini_read_real("slot1","Time",0);
flavor[1] = ini_read_real("slot1","flavor",0);

name[2] = ini_read_string("slot2","Name","");
place[2] = ini_read_string("slot2","Place","");
level[2] = ini_read_real("slot2","Level",0);
time[2] = ini_read_real("slot2","Time",0);
flavor[2] = ini_read_real("slot2","flavor",0);

name[3] = ini_read_string("slot3","Name","");
place[3] = ini_read_string("slot3","Place","");
level[3] = ini_read_real("slot3","Level",0);
time[3] = ini_read_real("slot3","Time",0);
flavor[3] = ini_read_real("slot3","flavor",0);

ini_close()

event_user(0)

cursor_x = _x[1]
cursor_y = _y[1]
cursor_image_index = 0
cursor_timer = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ok = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard controls
if ok {
    if keyboard_check_pressed(global.kb_back) {
        audio_play_sound(sndback,0,0)
        if mode = 0{
            ok = 0
            global.theroom = rmMenu
            instance_create(0,0,objFadeOut)
        } else if mode = 1 {
            switch global.saveslot {
                case "slot1":
                    cursor_y = _y[1]
                    break;
                case "slot2":
                    cursor_y = _y[2]
                    break;
                case "slot3":
                    cursor_y = _y[3]
                    break;
            }
            cursor_x = _x[1]
            ok = 0
            mode--
            alarm[0] = 1
        } else if mode = 2 {
            cursor_x = _x[1]
            cursor_y = _y[5]
            ok = 0
            mode--
            alarm[0] = 1
        }
    } else if keyboard_check_pressed(global.kb_choose) {
        audio_play_sound(sndchoose,0,0)
        if mode = 0 {
            if cursor_y = _y[1] {
                if game[1] {
                    cursor_y = _y[4]
                    mode = 1
                    ok = 0
                    alarm[0] = 1 
                } else {
                    ok = 0
                    instance_create(0,0,objFlavorSelectorOld)
                }
            } else if cursor_y = _y[2] {
                if game[2] {
                    cursor_y = _y[4]
                    mode = 1
                    ok = 0
                    alarm[0] = 1 
                } else {
                    ok = 0
                    instance_create(0,0,objFlavorSelectorOld)
                }
            } else if cursor_y = _y[3] {
                if game[3] {
                    cursor_y = _y[4]
                    mode = 1
                    ok = 0
                    alarm[0] = 1 
                } else {
                    ok = 0
                    instance_create(0,0,objFlavorSelectorOld)
                }
            }
        } else if mode = 1 {
            if cursor_y = _y[4] {
                ini_load_data(0)
                init_items()                        // Init all the items used in the game.
                init_skill_definitions()                      // Init the skills themselves.
                instance_create(0,0,objFadeOut)
                ok = 0
            } else {
                cursor_x = _x[3]
                cursor_y = _y[5]
                mode = 2
                ok = 0
                alarm[0] = 1 
            }
        } else if mode = 2 {
            if cursor_x = _x[4] {
                file_delete(global.saveslot+".lsd")
                ini_open(global.config_fname)
                ini_section_delete(global.saveslot)
                ini_close()
                switch global.saveslot {
                    case "slot1":
                        cursor_y = _y[1]
                        break;
                    case "slot2":
                        cursor_y = _y[2]
                        break;
                    case "slot3":
                        cursor_y = _y[3]
                        break;
                }
                cursor_x = _x[1]
                ok = 0
                mode = 0
                event_user(0)
                alarm[0] = 1
            } else {
                cursor_x = _x[1]
                cursor_y = _y[5]
                ok = 0
                mode--
                alarm[0] = 1
            }
        }
    } else if keyboard_check_pressed(vk_left) {
        if mode = 2 {
            audio_play_sound(sndselect,0,0)
            if cursor_x = _x[3] {
                cursor_x = _x[4]
            } else {
                cursor_x = _x[3]
            }
        }
    } else if keyboard_check_pressed(vk_up) {
        audio_play_sound(sndselect2,0,0)
        if mode = 0 {
            if cursor_y = _y[1] {
                cursor_y = _y[3]
                global.saveslot = "slot3"
            } else if cursor_y = _y[2] {
                cursor_y = _y[1]
                global.saveslot = "slot1"
            } else if cursor_y = _y[3] {
                cursor_y = _y[2]
                global.saveslot = "slot2"
            }
        } else if mode = 1 {
            if cursor_y = _y[4] {
                cursor_y = _y[5]
            } else {
                cursor_y = _y[4]
            }
        }
    } else if keyboard_check_pressed(vk_right) {
        if mode = 2 {
            audio_play_sound(sndselect,0,0)
            if cursor_x = _x[3] {
                cursor_x = _x[4]
            } else {
                cursor_x = _x[3]
            }
        }
    } else if keyboard_check_pressed(vk_down) {
        audio_play_sound(sndselect2,0,0)
        if mode = 0 {
            if cursor_y = _y[1] {
                cursor_y = _y[2]
                global.saveslot = "slot2"
            } else if cursor_y = _y[2] {
                cursor_y = _y[3]
                global.saveslot = "slot3"
            } else if cursor_y = _y[3] {
                cursor_y = _y[1]
                global.saveslot = "slot1"
            }
        } else if mode = 1 {
            if cursor_y = _y[4] {
                cursor_y = _y[5]
            } else {
                cursor_y = _y[4]
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cursor_timer +=0.25

if cursor_timer = 1
{
cursor_image_index +=1
cursor_timer = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i=1;i&lt;4;i++) {
    if !file_exists("slot"+string(i)+".lsd") or name[i] = "" or level[i] = 0 {
        if file_exists("slot"+string(i)+".lsd") {
            file_delete("slot"+string(i)+".lsd")
        }
        text[i] = string(i)+": "+"Start New Game"
        game[i] = 0
    } else {
        text[i] = string(i)+": "+name[i]+" - "+"Level"+": "+string(level[i])//+"#           Location: "+place[i]+" - Time playing: "+string(floor(time[i]/3600))+":"+string(floor((time[i]/60) mod 60))+":"+string(time[i] mod 60)
        game[i] = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_set_font(global.thenfont)
draw_set_halign(fa_left)
draw_window(8+v_offset,8,38,14)
draw_set_color(c_white)
draw_text(_x[1],_y[1],text[1])
draw_text(_x[1],_y[2],text[2])
draw_text(_x[1],_y[3],text[3])
if mode &gt; 0 {
    draw_window(8+v_offset,128,8,5)
    draw_text(_x[1],_y[4],"Continue")
    draw_text(_x[1],_y[5],"Delete")
}

if mode = 2 {
    draw_window(80+v_offset,128,29,5)
    draw_text(_x[2],_y[4],"Are you sure? This can't be undone!")
    draw_text(_x[3],_y[5],"No")
    draw_text(_x[4],_y[5],"Yes")
}
draw_sprite(spr_cursor,cursor_image_index,cursor_x-2,cursor_y+7)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
