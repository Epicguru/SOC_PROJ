<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000001</depth>
  <persistent>0</persistent>
  <parentName>parDeactivator</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview +v_offset

x1 = 0+v_offset
x2 = 23+v_offset
x3 = 46+v_offset
x4 = 69+v_offset

global.current_inv = 0
fir_res = ""
ice_res = ""
thn_res = ""
fla_res = ""
hyp_res = ""
par_res = ""

cursor_x2 = x1
ok = 0
event_user(0)
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ok = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard controls
if ok {
    if keyboard_check_pressed(global.kb_q) {
        audio_play_sound(sndselect,0,0)    
        switch global.pl_count {
            case 0: 
            case 1:
                cursor_x2 = x1
                global.current_inv = 0
                break;
            case 2:
                if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                else { cursor_x2 = x1; global.current_inv = 0 }
                break;
            case 3:
                if cursor_x2 = x1 { cursor_x2 = x3; global.current_inv = 2 }
                else if cursor_x2 = x3 { cursor_x2 = x2; global.current_inv = 1 }
                else { cursor_x2 = x1; global.current_inv = 0 }
                break;
            case 4:
                if cursor_x2 = x1 { cursor_x2 = x4; global.current_inv = 3 }
                else if cursor_x2 = x2 { cursor_x2 = x1; global.current_inv = 0 }
                else if cursor_x2 = x3 { cursor_x2 = x2; global.current_inv = 1 }
                else if cursor_x2 = x4 { cursor_x2 = x3; global.current_inv = 2 }
                break;
        }
        event_user(0)
    } else if keyboard_check_pressed(global.kb_w) {
        audio_play_sound(sndselect,0,0)
        switch global.pl_count {
            case 0: 
            case 1:
                cursor_x2 = x1
                global.current_inv = 0
                break;
            case 2:
                if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                else { cursor_x2 = x1; global.current_inv = 0 }
                break;
            case 3:
                if cursor_x2 = x2 { cursor_x2 = x3; global.current_inv = 2 }
                else if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                else { cursor_x2 = x1; global.current_inv = 0 }
                break;
            case 4:
                if cursor_x2 = x3 { cursor_x2 = x4; global.current_inv = 3 }
                else if cursor_x2 = x4 { cursor_x2 = x1; global.current_inv = 0 }
                else if cursor_x2 = x1 { cursor_x2 = x2; global.current_inv = 1 }
                else if cursor_x2 = x2 { cursor_x2 = x3; global.current_inv = 2 }
                break;
        }
        event_user(0)
    } else if keyboard_check_pressed(global.kb_back) {
        audio_play_sound(sndback,0,0)
        with objInGameMenu {alarm[0] = 1}
        global.current_inv = 0
        audio_play_sound(sndback,0,0)
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fir_res =  string(min(30*global.fire_resistance[global.current_inv+1],100))+"%"
ice_res =  string(min(30*global.freeze_resistance[global.current_inv+1],100))+"%"
thn_res =  string(min(30*global.thunder_resistance[global.current_inv+1],100))+"%"
hyp_res =  string(min(max(1,30*global.hypno_resistance[global.current_inv+1]),100))+"%"
par_res =  string(min(max(1,30*global.paralysis_resistance[global.current_inv+1]),100))+"%"
fla_res =  string(min(max(1,30*global.flash_resistance[global.current_inv+1]),100))+"%"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)
draw_set_font(global.thenfont2)
draw_set_halign(fa_left)
draw_set_color(c_white)
draw_window(x+72,view_yview+32,30,19)
draw_text_ext(x+84,view_yview+40,global.s_name[global.current_inv+1]+"#"+"Level"+" "+string(global.s_level[global.current_inv+1]),10,240)

draw_set_halign(fa_right)
draw_text_ext(x+300,view_yview+40,string(global.s_off[global.current_inv+1])+"#"+
                                           string(global.s_def[global.current_inv+1])+"#"+
                                           string(global.s_speed[global.current_inv+1])+"#"+
                                           string(global.s_guts[global.current_inv+1])+"#"+
                                           string(global.s_vitality[global.current_inv+1])+"#"+
                                           string(global.s_iq[global.current_inv+1])+"#"+
                                           string(global.s_luck[global.current_inv+1])+"#"+
                                           fir_res+"#"+
                                           ice_res+"#"+
                                           thn_res+"#"+
                                           fla_res+"#"+
                                           hyp_res+"#"+
                                           par_res,10,240)
                                           
draw_text_ext(x+164,view_yview+70,"Hit Points:#Psychic Points:#Experience:",10,240)

draw_text_ext(x+192,view_yview+70,string(global.s_hp[global.current_inv+1])+" /#"+string(global.s_pp[global.current_inv+1])+" /",10,240)
if global.s_level[global.current_inv+1] &lt; 101 {
    draw_text_ext(x+208,view_yview+70,string(global.s_hpmax[global.current_inv+1])+"#"+string(global.s_ppmax[global.current_inv+1])+"#"+string(global.s_exp[global.current_inv+1])+"#"+string(global.s_nextexp[global.s_level[global.current_inv+1]]-global.s_exp[global.current_inv+1])+" EXP for next level.",10,240)
} else {
    draw_text_ext(x+208,view_yview+70,string(global.s_hpmax[global.current_inv+1])+"#"+string(global.s_ppmax[global.current_inv+1])+"#"+string(global.s_exp[global.current_inv+1]),10,240)
}                    
draw_text_ext(x+272,view_yview+40,"Offense:#Defense:#Speed:#Guts:#Vitality:#IQ:#Luck:#Fire res.:#Freeze res.:#Thunder res.:#Flash res.:#Hypnosis res.:#Paralysis res.:",10,240)

switch global.pl_count {
    case 0: 
        draw_sprite(sprPortraits,3,x+72,y+8);
        break;
    case 1:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        break;
    case 2:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        draw_sprite(sprPortraits,1,x+72+23,y+8);
        break;
    case 3:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        draw_sprite(sprPortraits,1,x+72+23,y+8);
        draw_sprite(sprPortraits,2,x+72+46,y+8);
        break;
    case 4:
        draw_sprite(sprPortraits,global.gender*6,x+72,y+8);
        draw_sprite(sprPortraits,1,x+72+23,y+8);
        draw_sprite(sprPortraits,2,x+72+46,y+8);
        draw_sprite(sprPortraits,2,x+72+69,y+8);
        break;
}

draw_sprite(sprInvSel,0,view_xview+72+cursor_x2,y+8)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
