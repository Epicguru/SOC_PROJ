<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1410065407</depth>
  <persistent>-1</persistent>
  <parentName>parDeactivator</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter = 0;
fadespd = 0.075;
sound = 0;              // Sound to play at room start
state = 0;              // 0 - Leaving / 1 - Entering
effect_leave = 0;       
effect_enter = 0;
alarm[0] = 1 

                        
/* Transitions
0 - tr_fade     - Fade out / Fade in
1 - tr_cover_l  - Cover from the left
2 - tr_cover_r  - Cover from the right
3 - tr_cover_u  - Cover from the top
4 - tr_cover_d  - Cover from the bottom
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objPersistent.filter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if counter &gt;= 0 {
    counter -= fadespd
    if instance_exists(objPlayer) {
        objPlayer.canmove = false
    }
    alarm[1] = 1
} else {
    if sound != 0 {
        audio_play_sound(sound,1,0)
    }
    if instance_exists(objPlayer) {
        if !get_flag(28) {
            objPlayer.canmove = true
        }
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if counter &gt;= 1 {
    room_goto(global.theroom)
} else {
    counter += fadespd
    alarm[0] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//audio_sound_gain(global.bgMusic_,1-counter,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 1
state = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)
draw_set_alpha(1)
if state == 0 {
    switch effect_leave {
        case tr_fade:
            draw_set_alpha(counter)
            draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+426,view_yview[0]+240,0)
            break;
        case tr_cover_l:
            draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+426*counter,view_yview[0]+240,0) 
            break;
        case tr_cover_r:
            draw_rectangle(view_xview[0]+426,view_yview[0],view_xview[0]+426*(1-counter),view_yview[0]+240,0) 
            break;
        case tr_cover_u:
            draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+426,view_yview[0]+240*counter,0)
            break;
        case tr_cover_d:
            draw_rectangle(view_xview[0],view_yview[0]+240,view_xview[0]+426,view_yview[0]+240*(1-counter),0)
            break;
        case tr_pixel:
            objPersistent.filter = 1;
            objPersistent.pixelsize = max(128*(counter),1); 
            break;
    }
} else {
   switch effect_enter {
        case tr_fade:
            draw_set_alpha(counter)
            draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+426,view_yview[0]+240,0)
            break;
        case tr_cover_l:
            draw_rectangle(view_xview[0]+426*(1-counter),view_yview[0],view_xview[0]+426,view_yview[0]+240,0)
            break;
        case tr_cover_r:
            draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+426*(counter),view_yview[0]+240,0) 
            break;
        case tr_cover_u:
            draw_rectangle(view_xview[0],view_yview[0]+240*(1-counter),view_xview[0]+426,view_yview[0]+240,0)
            break;
        case tr_cover_d:
            draw_rectangle(view_xview[0],view_yview[0]+240*(counter),view_xview[0]+426,view_yview[0],0)
            break;
        case tr_pixel:
            objPersistent.filter = 1;
            objPersistent.pixelsize = max(128*counter,1); 
            break;
    } 
}
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
